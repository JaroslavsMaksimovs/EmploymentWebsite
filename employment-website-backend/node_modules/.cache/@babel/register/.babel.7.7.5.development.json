{
  "{\"sourceRoot\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend\",\"filename\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend",
      "filename": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nvar _jobs = _interopRequireDefault(require(\"./jobs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar homepageAdress = 'http://localhost:3000';\nvar serverEmail = 'employment-website@inbox.lv';\n\nvar transporter = _nodemailer[\"default\"].createTransport({\n  host: 'mail.inbox.lv',\n  port: '587',\n  secure: false,\n  auth: {\n    user: serverEmail,\n    pass: 'g3DW4pBmD9'\n  }\n});\n\napp.use(_bodyParser[\"default\"].json());\n\nvar withDB = function withDB(operations, res) {\n  var client, db;\n  return regeneratorRuntime.async(function withDB$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return regeneratorRuntime.awrap(_mongodb.MongoClient.connect('mongodb://localhost:27017', {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n          }));\n\n        case 3:\n          client = _context.sent;\n          db = client.db('employment-website');\n          _context.next = 7;\n          return regeneratorRuntime.awrap(operations(db));\n\n        case 7:\n          client.close();\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          res.status(500).json({\n            message: 'Error connecting to database',\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nvar sendEmail = function sendEmail(email, subject, html) {\n  transporter.sendMail({\n    from: serverEmail,\n    to: email,\n    subject: subject,\n    html: html\n  });\n};\n\nvar makeApplication = function makeApplication(db, seekerEmail, jobTitle) {\n  var accountDetails, jobInfo, jobEmail, message;\n  return regeneratorRuntime.async(function makeApplication$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return regeneratorRuntime.awrap(db.collection('seekers').findOne({\n            email: seekerEmail\n          }));\n\n        case 2:\n          accountDetails = _context2.sent;\n\n          if (!(accountDetails.status === 'unconfirmed')) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", {\n            status: 500,\n            message: 'Confirm your e-mail before applying'\n          });\n\n        case 7:\n          _context2.next = 9;\n          return regeneratorRuntime.awrap(db.collection('vacancies').findOne({\n            jobTitle: jobTitle\n          }));\n\n        case 9:\n          jobInfo = _context2.sent;\n          jobEmail = jobInfo.email;\n          message = 'Name : ' + accountDetails.firstName + ' ' + accountDetails.surname + '<br>Education: ' + accountDetails.education + '<br>Work Experience: ' + accountDetails.workExperience + '<br>Skills: ' + accountDetails.skills;\n          sendEmail(jobEmail, 'Application for ' + jobTitle, '<p>' + message + '</p>');\n          return _context2.abrupt(\"return\", {\n            status: 200,\n            message: 'Application sent'\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\napp.get('/api/vacancies/:jobTitle', function _callee2(req, res) {\n  return regeneratorRuntime.async(function _callee2$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          withDB(function _callee(db) {\n            var jobTitle, jobInfo;\n            return regeneratorRuntime.async(function _callee$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    jobTitle = req.params.jobTitle;\n                    _context3.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').findOne({\n                      jobTitle: jobTitle\n                    }));\n\n                  case 3:\n                    jobInfo = _context3.sent;\n                    res.status(200).json(jobInfo);\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n});\napp.get('/api/seekers/:email', function _callee4(req, res) {\n  return regeneratorRuntime.async(function _callee4$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          withDB(function _callee3(db) {\n            var email, accountDetails;\n            return regeneratorRuntime.async(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    email = req.params.email;\n                    _context5.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('seekers').findOne({\n                      email: email\n                    }));\n\n                  case 3:\n                    accountDetails = _context5.sent;\n\n                    if (accountDetails === null) {\n                      res.status(500).json({\n                        message: 'No such email'\n                      });\n                    } else {\n                      res.status(200).json(accountDetails);\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n});\napp.get('/api/vacancies/delete/:jobTitle', function _callee6(req, res) {\n  return regeneratorRuntime.async(function _callee6$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          withDB(function _callee5(db) {\n            var jobTitle;\n            return regeneratorRuntime.async(function _callee5$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    jobTitle = req.params.jobTitle;\n                    _context7.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').deleteOne({\n                      jobTitle: jobTitle\n                    }));\n\n                  case 3:\n                    res.status(200).json({\n                      message: 'Deleted successfully'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n});\napp.get('/api/seekers/delete/:email', function _callee8(req, res) {\n  return regeneratorRuntime.async(function _callee8$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          withDB(function _callee7(db) {\n            var email;\n            return regeneratorRuntime.async(function _callee7$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    email = req.params.email;\n                    _context9.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('seekers').deleteOne({\n                      email: email\n                    }));\n\n                  case 3:\n                    res.status(200).json({\n                      message: 'Deleted successfully'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  });\n});\napp.post('/api/vacancies/getAllTitles', function _callee10(req, res) {\n  return regeneratorRuntime.async(function _callee10$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          withDB(function _callee9(db) {\n            var jobs;\n            return regeneratorRuntime.async(function _callee9$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    jobs = [];\n                    _context11.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').find({}).forEach(function (object) {\n                      jobs.push(object);\n                    }));\n\n                  case 3:\n                    res.status(200).json(jobs);\n\n                  case 4:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  });\n});\napp.post('/api/vacancies/add-new', function _callee12(req, res) {\n  return regeneratorRuntime.async(function _callee12$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          withDB(function _callee11(db) {\n            return regeneratorRuntime.async(function _callee11$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').findOne({\n                      jobTitle: req.body.jobTitle\n                    }));\n\n                  case 2:\n                    _context13.t0 = _context13.sent;\n\n                    if (!(_context13.t0 === null)) {\n                      _context13.next = 9;\n                      break;\n                    }\n\n                    _context13.next = 6;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').insertOne(req.body));\n\n                  case 6:\n                    res.status(200).json(req.body);\n                    _context13.next = 10;\n                    break;\n\n                  case 9:\n                    res.status(500).json({\n                      message: 'This job name is already taken'\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  });\n});\napp.post('/api/vacancies/edit', function _callee14(req, res) {\n  return regeneratorRuntime.async(function _callee14$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          withDB(function _callee13(db) {\n            var body;\n            return regeneratorRuntime.async(function _callee13$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    body = req.body;\n                    _context15.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('vacancies').updateOne({\n                      jobTitle: body.jobTitle\n                    }, {\n                      $set: {\n                        companyName: body.companyName,\n                        email: body.email,\n                        jobType: body.jobType,\n                        education: body.education,\n                        workExperience: body.workExperience,\n                        skills: body.skills,\n                        minimumSalary: body.minimumSalary,\n                        maximumSalary: body.maximumSalary,\n                        location: body.location,\n                        description: body.description\n                      }\n                    }));\n\n                  case 3:\n                    res.status(200).json({\n                      meesage: 'Edit successful'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  });\n});\napp.post('/api/seekers/add-new', function _callee16(req, res) {\n  return regeneratorRuntime.async(function _callee16$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          withDB(function _callee15(db) {\n            var body, accountDetails, id, url;\n            return regeneratorRuntime.async(function _callee15$(_context17) {\n              while (1) {\n                switch (_context17.prev = _context17.next) {\n                  case 0:\n                    body = req.body;\n                    _context17.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('seekers').findOne({\n                      email: body.email\n                    }));\n\n                  case 3:\n                    _context17.t0 = _context17.sent;\n\n                    if (!(_context17.t0 === null)) {\n                      _context17.next = 18;\n                      break;\n                    }\n\n                    body.status = 'unconfirmed';\n                    body.confirmNumber = Math.floor(Math.random() * 100 + 54).toString();\n                    _context17.next = 9;\n                    return regeneratorRuntime.awrap(db.collection('seekers').insertOne(body));\n\n                  case 9:\n                    _context17.next = 11;\n                    return regeneratorRuntime.awrap(db.collection('seekers').findOne({\n                      email: body.email\n                    }));\n\n                  case 11:\n                    accountDetails = _context17.sent;\n                    id = accountDetails._id;\n                    url = 'http://' + req.get('host') + '/api/confirm-email/' + id + '/' + body.confirmNumber;\n                    sendEmail(body.email, 'Confirm Your E-mail', '<p>Hello, <br> Please click the link below to confirm your e-mail: <br>' + url + '</p>');\n                    res.status(200).json(req.body);\n                    _context17.next = 19;\n                    break;\n\n                  case 18:\n                    res.status(500).json({\n                      message: 'This email is already taken'\n                    });\n\n                  case 19:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  });\n});\napp.post('/api/seekers/edit', function _callee18(req, res) {\n  return regeneratorRuntime.async(function _callee18$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          withDB(function _callee17(db) {\n            var body;\n            return regeneratorRuntime.async(function _callee17$(_context19) {\n              while (1) {\n                switch (_context19.prev = _context19.next) {\n                  case 0:\n                    body = req.body;\n                    _context19.next = 3;\n                    return regeneratorRuntime.awrap(db.collection('seekers').updateOne({\n                      email: body.email\n                    }, {\n                      $set: {\n                        firstName: body.firstName,\n                        surname: body.surname,\n                        location: body.location,\n                        education: body.education,\n                        workExperience: body.workExperience,\n                        skills: body.skills,\n                        salary: body.salary,\n                        jobType: body.jobType\n                      }\n                    }));\n\n                  case 3:\n                    res.status(200).json({\n                      meesage: 'Edit successful'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context19.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  });\n});\napp.post('/api/seekers/search', function _callee21(req, res) {\n  return regeneratorRuntime.async(function _callee21$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          withDB(function _callee20(db) {\n            var body, seekerEmail, jobs;\n            return regeneratorRuntime.async(function _callee20$(_context22) {\n              while (1) {\n                switch (_context22.prev = _context22.next) {\n                  case 0:\n                    body = req.body;\n                    seekerEmail = body.email;\n                    jobs = body.jobs;\n                    _context22.next = 5;\n                    return regeneratorRuntime.awrap(db.collection('seekers').updateOne({\n                      email: body.email\n                    }, {\n                      $set: {\n                        search: '1'\n                      }\n                    }));\n\n                  case 5:\n                    jobs.forEach(function _callee19(job) {\n                      var result;\n                      return regeneratorRuntime.async(function _callee19$(_context21) {\n                        while (1) {\n                          switch (_context21.prev = _context21.next) {\n                            case 0:\n                              _context21.next = 2;\n                              return regeneratorRuntime.awrap(makeApplication(db, seekerEmail, job.jobTitle));\n\n                            case 2:\n                              result = _context21.sent;\n\n                              if (result.status !== 200) {\n                                res.status(result.status).json({\n                                  message: result.message\n                                });\n                              }\n\n                            case 4:\n                            case \"end\":\n                              return _context21.stop();\n                          }\n                        }\n                      });\n                    });\n                    sendEmail(seekerEmail, 'Your job search', '<p>Congratulations, your application is sent to ' + jobs.length + ' employers already, and will be sent to any new vacancies that seem to be a good fit for you!<p>');\n                    res.status(200).json({\n                      meesage: 'Search successful'\n                    });\n\n                  case 8:\n                  case \"end\":\n                    return _context22.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  });\n});\napp.get('/api/confirm-email/:id/:number', function _callee23(req, res) {\n  return regeneratorRuntime.async(function _callee23$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          withDB(function _callee22(db) {\n            var number, id, objectId, accountDetails;\n            return regeneratorRuntime.async(function _callee22$(_context24) {\n              while (1) {\n                switch (_context24.prev = _context24.next) {\n                  case 0:\n                    number = req.params.number;\n                    id = req.params.id;\n                    objectId = (0, _mongodb.ObjectId)(id);\n                    _context24.next = 5;\n                    return regeneratorRuntime.awrap(db.collection('seekers').findOne({\n                      _id: objectId\n                    }));\n\n                  case 5:\n                    accountDetails = _context24.sent;\n\n                    if (!(accountDetails.status === 'unconfirmed')) {\n                      _context24.next = 17;\n                      break;\n                    }\n\n                    if (!(accountDetails.confirmNumber === number)) {\n                      _context24.next = 14;\n                      break;\n                    }\n\n                    _context24.next = 10;\n                    return regeneratorRuntime.awrap(db.collection('seekers').updateOne({\n                      _id: objectId\n                    }, {\n                      $set: {\n                        status: 'confirmed'\n                      }\n                    }));\n\n                  case 10:\n                    res.redirect(homepageAdress);\n                    res.status(200).json({\n                      message: 'Confirmed successfully'\n                    });\n                    _context24.next = 15;\n                    break;\n\n                  case 14:\n                    res.status(500).json({\n                      message: 'Invalid URL'\n                    });\n\n                  case 15:\n                    _context24.next = 19;\n                    break;\n\n                  case 17:\n                    res.redirect(homepageAdress);\n                    res.status(500).json({\n                      message: 'Email is already confirmed'\n                    });\n\n                  case 19:\n                  case \"end\":\n                    return _context24.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  });\n});\napp.get('/api/submit/:seekerEmail/:jobTitle', function _callee25(req, res) {\n  return regeneratorRuntime.async(function _callee25$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          withDB(function _callee24(db) {\n            var seekerEmail, jobTitle, result;\n            return regeneratorRuntime.async(function _callee24$(_context26) {\n              while (1) {\n                switch (_context26.prev = _context26.next) {\n                  case 0:\n                    seekerEmail = req.params.seekerEmail;\n                    jobTitle = req.params.jobTitle;\n                    _context26.next = 4;\n                    return regeneratorRuntime.awrap(makeApplication(db, seekerEmail, jobTitle));\n\n                  case 4:\n                    result = _context26.sent;\n\n                    if (result.status === 200) {\n                      sendEmail(seekerEmail, 'Your application for ' + jobTitle, '<p> You have successfully applied for the position ' + jobTitle + '.<p>');\n                    }\n\n                    res.status(result.status).json({\n                      message: result.message\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context26.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  });\n});\napp.post('/api/operate', function _callee27(req, res) {\n  return regeneratorRuntime.async(function _callee27$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          withDB(function _callee26(db) {\n            return regeneratorRuntime.async(function _callee26$(_context28) {\n              while (1) {\n                switch (_context28.prev = _context28.next) {\n                  case 0:\n                    console.log(_jobs[\"default\"]);\n                    res.status(200).json({\n                      message: 'success'\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context28.stop();\n                }\n              }\n            });\n          }, res);\n\n        case 1:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  });\n});\napp.listen(8000, function () {\n  return console.log('Listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "homepageAdress",
        "serverEmail",
        "transporter",
        "nodemailer",
        "createTransport",
        "host",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "use",
        "bodyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "sendEmail",
        "email",
        "subject",
        "html",
        "sendMail",
        "from",
        "to",
        "makeApplication",
        "seekerEmail",
        "jobTitle",
        "collection",
        "findOne",
        "accountDetails",
        "jobInfo",
        "jobEmail",
        "firstName",
        "surname",
        "education",
        "workExperience",
        "skills",
        "get",
        "req",
        "params",
        "deleteOne",
        "post",
        "jobs",
        "find",
        "forEach",
        "object",
        "push",
        "body",
        "insertOne",
        "updateOne",
        "$set",
        "companyName",
        "jobType",
        "minimumSalary",
        "maximumSalary",
        "location",
        "description",
        "meesage",
        "confirmNumber",
        "Math",
        "floor",
        "random",
        "toString",
        "id",
        "_id",
        "url",
        "salary",
        "search",
        "job",
        "result",
        "length",
        "number",
        "objectId",
        "redirect",
        "console",
        "log",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport nodemailer from 'nodemailer';\nimport jobs from './jobs';\n\nconst app = express();\nconst homepageAdress = 'http://localhost:3000';\nconst serverEmail = 'employment-website@inbox.lv';\nconst transporter = nodemailer.createTransport({\n  host: 'mail.inbox.lv',\n  port: '587',\n  secure: false,\n  auth: {\n    user: serverEmail,\n    pass: 'g3DW4pBmD9'\n  }\n});\n\napp.use(bodyParser.json());\n\nconst withDB = async (operations, res) => {\n  try {\n    const client = await MongoClient.connect('mongodb://localhost:27017',\n      { useNewUrlParser: true, useUnifiedTopology: true });\n    const db = client.db('employment-website');\n\n    await operations(db);\n\n    client.close();\n\n  } catch(error) {\n    res.status(500).json({ message: 'Error connecting to database', error })\n  }\n};\n\nconst sendEmail = (email, subject, html) => {\n  transporter.sendMail({\n    from: serverEmail,\n    to: email,\n    subject: subject,\n    html: html\n  });\n};\n\nconst makeApplication = async (db, seekerEmail, jobTitle) => {\n  const accountDetails = await db.collection('seekers').findOne({ email: seekerEmail });\n  if (accountDetails.status === 'unconfirmed') {\n    return ({ status: 500, message: 'Confirm your e-mail before applying' });\n  } else {\n    const jobInfo = await db.collection('vacancies').findOne({ jobTitle: jobTitle });\n    const jobEmail = jobInfo.email;\n    const message = 'Name : ' + accountDetails.firstName + ' ' + accountDetails.surname +\n    '<br>Education: ' + accountDetails.education + '<br>Work Experience: ' +\n    accountDetails.workExperience + '<br>Skills: ' + accountDetails.skills;\n    sendEmail(jobEmail, 'Application for ' + jobTitle, '<p>' + message + '</p>');\n    return ({ status: 200, message: 'Application sent'});\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\napp.get('/api/vacancies/:jobTitle', async (req,res) => {\n  withDB(async (db) => {\n    const jobTitle = req.params.jobTitle;\n\n    const jobInfo = await db.collection('vacancies').findOne({ jobTitle: jobTitle });\n\n    res.status(200).json(jobInfo);\n  }, res);\n});\n\napp.get('/api/seekers/:email', async (req,res) => {\n  withDB(async (db) => {\n    const email = req.params.email;\n\n    const accountDetails = await db.collection('seekers').findOne({ email: email });\n\n    if (accountDetails === null) {\n      res.status(500).json({ message: 'No such email' });\n    } else {\n      res.status(200).json(accountDetails);\n    }\n  }, res);\n});\n\n\napp.get('/api/vacancies/delete/:jobTitle', async (req,res) => {\n  withDB(async (db) => {\n    const jobTitle = req.params.jobTitle;\n\n    await db.collection('vacancies').deleteOne({ jobTitle: jobTitle });\n\n    res.status(200).json({ message: 'Deleted successfully' });\n  }, res);\n});\n\n\napp.get('/api/seekers/delete/:email', async (req,res) => {\n  withDB(async (db) => {\n    const email = req.params.email;\n\n    await db.collection('seekers').deleteOne({ email: email });\n\n    res.status(200).json({ message: 'Deleted successfully' });\n  }, res);\n});\n\n\napp.post('/api/vacancies/getAllTitles', async (req,res) => {\n  withDB(async (db) => {\n    const jobs = [];\n    await db.collection('vacancies').find({}).forEach((object) => {\n      jobs.push(object);\n\n    });\n    res.status(200).json(jobs);\n  }, res);\n});\n\n\napp.post('/api/vacancies/add-new', async (req,res) => {\n  withDB(async (db) => {\n    if (await db.collection('vacancies').findOne({ jobTitle: req.body.jobTitle}) === null)\n    {\n      await db.collection('vacancies').insertOne(req.body);\n\n      res.status(200).json(req.body);\n    } else {\n      res.status(500).json({ message: 'This job name is already taken' });\n    }\n  }, res);\n});\n\napp.post('/api/vacancies/edit', async (req,res) => {\n  withDB(async (db) => {\n    const body = req.body;\n    await db.collection('vacancies').updateOne({ jobTitle: body.jobTitle }, {\n      $set: {\n        companyName:  body.companyName,\n        email: body.email,\n        jobType:  body.jobType,\n        education: body.education,\n        workExperience: body.workExperience,\n        skills: body.skills,\n        minimumSalary: body.minimumSalary,\n        maximumSalary: body.maximumSalary,\n        location: body.location,\n        description: body.description,\n      }\n    });\n    res.status(200).json({ meesage: 'Edit successful'});\n  }, res);\n});\n\n\n\n\n\napp.post('/api/seekers/add-new', async (req,res) => {\n  withDB(async (db) => {\n    var body = req.body;\n    if (await db.collection('seekers').findOne({ email: body.email}) === null)\n    {\n      body.status = 'unconfirmed';\n\n      body.confirmNumber = (Math.floor((Math.random() * 100) + 54)).toString();\n\n      await db.collection('seekers').insertOne(body);\n      const accountDetails = await db.collection('seekers').findOne({ email: body.email });\n      const id = accountDetails._id;\n\n      const url = 'http://' + req.get('host') + '/api/confirm-email/' + id + '/' + body.confirmNumber;\n      sendEmail(body.email, 'Confirm Your E-mail', '<p>Hello, <br> Please click the link below to confirm your e-mail: <br>' + url + '</p>');\n\n      res.status(200).json(req.body);\n    } else {\n      res.status(500).json({ message: 'This email is already taken' });\n    }\n  }, res);\n});\n\napp.post('/api/seekers/edit', async (req,res) => {\n  withDB(async (db) => {\n    const body = req.body;\n    await db.collection('seekers').updateOne({ email: body.email }, {\n      $set: {\n        firstName: body.firstName,\n        surname:  body.surname,\n        location: body.location,\n        education: body.education,\n        workExperience: body.workExperience,\n        skills: body.skills,\n        salary: body.salary,\n        jobType:  body.jobType,\n      }\n    });\n    res.status(200).json({ meesage: 'Edit successful'});\n  }, res);\n});\n\napp.post('/api/seekers/search', async (req,res) => {\n  withDB(async (db) => {\n    const body = req.body;\n    const seekerEmail = body.email;\n    const jobs = body.jobs;\n    await db.collection('seekers').updateOne({ email: body.email }, {\n      $set: {\n        search: '1',\n      }\n    });\n    jobs.forEach(async (job) => {\n      const result = await makeApplication(db, seekerEmail, job.jobTitle);\n      if (result.status !== 200) {\n        res.status(result.status).json({ message: result.message });\n      }\n    });\n    sendEmail(seekerEmail, 'Your job search', '<p>Congratulations, your application is sent to ' + jobs.length + ' employers already, and will be sent to any new vacancies that seem to be a good fit for you!<p>');\n    res.status(200).json({ meesage: 'Search successful'});\n  }, res);\n});\n\n\n\napp.get('/api/confirm-email/:id/:number', async (req,res) => {\n  withDB(async (db) => {\n    const number = req.params.number;\n    const id = req.params.id;\n    const objectId = ObjectId(id);\n\n    const accountDetails = await db.collection('seekers').findOne({ _id: objectId });\n    if (accountDetails.status === 'unconfirmed') {\n      if (accountDetails.confirmNumber === number) {\n        await db.collection('seekers').updateOne({ _id: objectId }, {\n          $set: {\n            status: 'confirmed'\n          }\n        });\n        res.redirect(homepageAdress);\n        res.status(200).json({ message: 'Confirmed successfully' });\n      } else {\n        res.status(500).json({ message: 'Invalid URL' });\n      }\n    } else {\n      res.redirect(homepageAdress);\n      res.status(500).json({ message: 'Email is already confirmed' });\n    }\n  }, res);\n});\n\n\n\napp.get('/api/submit/:seekerEmail/:jobTitle', async (req,res) => {\n  withDB(async (db) => {\n    const seekerEmail = req.params.seekerEmail;\n    const jobTitle = req.params.jobTitle;\n\n    const result = await makeApplication(db, seekerEmail, jobTitle);\n    if (result.status === 200) {\n      sendEmail(seekerEmail, 'Your application for ' + jobTitle, '<p> You have successfully applied for the position ' + jobTitle + '.<p>');\n    }\n    res.status(result.status).json({ message: result.message })\n  }, res);\n});\n\napp.post('/api/operate', async (req,res) => {\n  withDB(async (db) => {\n    console.log(jobs);\n    res.status(200).json({ message: 'success'});\n  }, res);\n});\n\n\n\napp.listen(8000, () => console.log('Listening on port 8000'));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587227145555
  },
  "{\"sourceRoot\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend\",\"filename\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/jobs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Jaroslav/Desktop/COMP0029/employment-website-backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend",
      "filename": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/jobs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/jobs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src/jobs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
        "sourceFileName": "jobs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar jobs = [{\n  jobTitle: \"Java Developer - Remote Process\",\n  companyName: \"Client Server\",\n  email: \"slalalavik1@mail.ru\",\n  jobType: \"Permanent\",\n  minimumSalary: \"35000\",\n  maximumSalary: \"50000\",\n  location: \"West London\",\n  essentialRequirements: \"Java development experience ideally including multi-threading\\nExperience with Spring framework\\nTechnologist, keen to learn and work with modern tools in a microservices / DevOps environment\\nCollaborative with good communication skills\",\n  beneficialRequirements: \"Experience with Docker, Kubernetes \",\n  description: \"Java Developer / Junior Software Engineer **Remote Process WFH**. Would like to progress your career working on complex and interesting systems? You could be joining a scientific software house and enjoying perks such as flexible working and a tailor made training and career development path with paid for professional fees and book reimbursements.\\n\\nThe core product is an advanced process simulation, modelling and optimisation software for the process industries (power, biochemical and pharmaceutical). Joining an Agile development team as a Java Developer you will focus on building a new web based system in line with the current desktop application. You'll use multi-threaded Java and Spring within a microservices environment with Docker used for containerisation.\\n\\nBased in West London you'll be working with a diverse international team.\\n\\nThe company is able to offer a remote interview and onboarding process during the current social distancing measures.\",\n  dateAdded: \"11/04/2020, 15:22:14\"\n}, {\n  jobTitle: \"Senior Calypso Software Developer - London\",\n  companyName: \"Nexus Recruitment\",\n  email: \"slalalavik1@mail.ru\",\n  jobType: \"Contract\",\n  minimumSalary: \"400\",\n  maximumSalary: \"600\",\n  location: \"City of London\",\n  essentialRequirements: \"A degree in Information Technology or equivalent.\\nExperience of working in a regulated environment, ideally Financial Services\\nSenior level analyst developer/Team Leader\\nExperience of / Aspire to leading support/development teams\\nKnowledge and understanding of trade life cycle covering back office processes like Settlements, collateral and securities.\\nJava\\nCalypso API\\nOracle DBMS\\nCalypso V14 or later\\nCATT Automation and testing tool\",\n  beneficialRequirements: \"\",\n  description: \"Our Client is seeking a Senior Calypso Software Developer with 3 to 5 years experience.\\n\\n\\nCalypso V14 as its Collateral Management system and are investigating introducing further business lines like cash management, FX and securities.\\n\\nThe Client are looking to build a team of support analyst and analyst developers to provide first line and development capabilities and this analyst developer role sits in the Run the bank team (RTB).\",\n  dateAdded: \"11/04/2020, 15:47:42\"\n}, {\n  jobTitle: \"Junior\",\n  companyName: \"Handle Recruitment Ltd\",\n  email: \"slalalavik1@mail.ru\",\n  jobType: \"Permanent\",\n  minimumSalary: \"40000\",\n  maximumSalary: \"50000\",\n  location: \"Central London\",\n  essentialRequirements: \"Modern Java Development experience.\\nExperience with Containerised Java 8+ Microservices, Spring Boot, NoSQL Databases, Messaging/Pub-Sub, CI/CD, Docker, Git.\\nRESTful API design principles.\\nTDD and BDD.\",\n  beneficialRequirements: \"JavaScript / React / Node.JS.\\nExperience within TV/broadcast industry a strong benefit.\\nKubernetes\\nApache Cassandra\\nJenkins\\nGCP or AWS experience.\",\n  description: \"We currently have a Java Developer role available for high profile broadcast media company who's offices are based in central London.\\n\\nThe right candidate will have an interest in promoting high quality code, good engineering practices and clear documentation. And offer excellent benefits including bonus.\\n\\nResponsibilities:\\n\\nTo create, evolve and maintain a robust platform.\\nBecome the technical authority on our cloud platform and help inform our overall technical direction.\\nFormulate guidelines for development practices and oversee implementation.\\nensuring the smooth operation of robust CI/CD pipelines and workflows.\\nWork with Product to translate product requirements into architectural blueprints in line with our cloud microservices strategy\\ndeliver clean code in a lean and agile fashion;\",\n  dateAdded: \"11/04/2020, 16:05:28\"\n}];\nvar _default = jobs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYnMuanMiXSwibmFtZXMiOlsiam9icyIsImpvYlRpdGxlIiwiY29tcGFueU5hbWUiLCJlbWFpbCIsImpvYlR5cGUiLCJtaW5pbXVtU2FsYXJ5IiwibWF4aW11bVNhbGFyeSIsImxvY2F0aW9uIiwiZXNzZW50aWFsUmVxdWlyZW1lbnRzIiwiYmVuZWZpY2lhbFJlcXVpcmVtZW50cyIsImRlc2NyaXB0aW9uIiwiZGF0ZUFkZGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxJQUFJLEdBQUcsQ0FDWDtBQUNDQyxFQUFBQSxRQUFRLEVBQUcsaUNBRFo7QUFFQ0MsRUFBQUEsV0FBVyxFQUFHLGVBRmY7QUFHQ0MsRUFBQUEsS0FBSyxFQUFHLHFCQUhUO0FBSUNDLEVBQUFBLE9BQU8sRUFBRyxXQUpYO0FBS0NDLEVBQUFBLGFBQWEsRUFBRyxPQUxqQjtBQU1DQyxFQUFBQSxhQUFhLEVBQUcsT0FOakI7QUFPQ0MsRUFBQUEsUUFBUSxFQUFHLGFBUFo7QUFRQ0MsRUFBQUEscUJBQXFCLEVBQUcsK09BUnpCO0FBU0NDLEVBQUFBLHNCQUFzQixFQUFHLHFDQVQxQjtBQVVDQyxFQUFBQSxXQUFXLEVBQUcsODhCQVZmO0FBV0NDLEVBQUFBLFNBQVMsRUFBRztBQVhiLENBRFcsRUFjWDtBQUNDVixFQUFBQSxRQUFRLEVBQUcsNENBRFo7QUFFQ0MsRUFBQUEsV0FBVyxFQUFHLG1CQUZmO0FBR0NDLEVBQUFBLEtBQUssRUFBRyxxQkFIVDtBQUlDQyxFQUFBQSxPQUFPLEVBQUcsVUFKWDtBQUtDQyxFQUFBQSxhQUFhLEVBQUcsS0FMakI7QUFNQ0MsRUFBQUEsYUFBYSxFQUFHLEtBTmpCO0FBT0NDLEVBQUFBLFFBQVEsRUFBRyxnQkFQWjtBQVFDQyxFQUFBQSxxQkFBcUIsRUFBRywrYkFSekI7QUFTQ0MsRUFBQUEsc0JBQXNCLEVBQUcsRUFUMUI7QUFVRUMsRUFBQUEsV0FBVyxFQUFHLDRiQVZoQjtBQVdDQyxFQUFBQSxTQUFTLEVBQUc7QUFYYixDQWRXLEVBMkJYO0FBQ0NWLEVBQUFBLFFBQVEsRUFBRyxRQURaO0FBRUNDLEVBQUFBLFdBQVcsRUFBRyx3QkFGZjtBQUdDQyxFQUFBQSxLQUFLLEVBQUcscUJBSFQ7QUFJQ0MsRUFBQUEsT0FBTyxFQUFHLFdBSlg7QUFLQ0MsRUFBQUEsYUFBYSxFQUFHLE9BTGpCO0FBTUNDLEVBQUFBLGFBQWEsRUFBRyxPQU5qQjtBQU9DQyxFQUFBQSxRQUFRLEVBQUcsZ0JBUFo7QUFRQ0MsRUFBQUEscUJBQXFCLEVBQUcsOE1BUnpCO0FBU0NDLEVBQUFBLHNCQUFzQixFQUFHLHlKQVQxQjtBQVVDQyxFQUFBQSxXQUFXLEVBQUcsNnlCQVZmO0FBV0NDLEVBQUFBLFNBQVMsRUFBRztBQVhiLENBM0JXLENBQWI7ZUEyQ2VYLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL0phcm9zbGF2L0Rlc2t0b3AvQ09NUDAwMjkvZW1wbG95bWVudC13ZWJzaXRlLWJhY2tlbmQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgam9icyA9IFtcbiAge1xuICBcdGpvYlRpdGxlIDogXCJKYXZhIERldmVsb3BlciAtIFJlbW90ZSBQcm9jZXNzXCIsXG4gIFx0Y29tcGFueU5hbWUgOiBcIkNsaWVudCBTZXJ2ZXJcIixcbiAgXHRlbWFpbCA6IFwic2xhbGFsYXZpazFAbWFpbC5ydVwiLFxuICBcdGpvYlR5cGUgOiBcIlBlcm1hbmVudFwiLFxuICBcdG1pbmltdW1TYWxhcnkgOiBcIjM1MDAwXCIsXG4gIFx0bWF4aW11bVNhbGFyeSA6IFwiNTAwMDBcIixcbiAgXHRsb2NhdGlvbiA6IFwiV2VzdCBMb25kb25cIixcbiAgXHRlc3NlbnRpYWxSZXF1aXJlbWVudHMgOiBcIkphdmEgZGV2ZWxvcG1lbnQgZXhwZXJpZW5jZSBpZGVhbGx5IGluY2x1ZGluZyBtdWx0aS10aHJlYWRpbmdcXG5FeHBlcmllbmNlIHdpdGggU3ByaW5nIGZyYW1ld29ya1xcblRlY2hub2xvZ2lzdCwga2VlbiB0byBsZWFybiBhbmQgd29yayB3aXRoIG1vZGVybiB0b29scyBpbiBhIG1pY3Jvc2VydmljZXMgLyBEZXZPcHMgZW52aXJvbm1lbnRcXG5Db2xsYWJvcmF0aXZlIHdpdGggZ29vZCBjb21tdW5pY2F0aW9uIHNraWxsc1wiLFxuICBcdGJlbmVmaWNpYWxSZXF1aXJlbWVudHMgOiBcIkV4cGVyaWVuY2Ugd2l0aCBEb2NrZXIsIEt1YmVybmV0ZXMgXCIsXG4gIFx0ZGVzY3JpcHRpb24gOiBcIkphdmEgRGV2ZWxvcGVyIC8gSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyICoqUmVtb3RlIFByb2Nlc3MgV0ZIKiouIFdvdWxkIGxpa2UgdG8gcHJvZ3Jlc3MgeW91ciBjYXJlZXIgd29ya2luZyBvbiBjb21wbGV4IGFuZCBpbnRlcmVzdGluZyBzeXN0ZW1zPyBZb3UgY291bGQgYmUgam9pbmluZyBhIHNjaWVudGlmaWMgc29mdHdhcmUgaG91c2UgYW5kIGVuam95aW5nIHBlcmtzIHN1Y2ggYXMgZmxleGlibGUgd29ya2luZyBhbmQgYSB0YWlsb3IgbWFkZSB0cmFpbmluZyBhbmQgY2FyZWVyIGRldmVsb3BtZW50IHBhdGggd2l0aCBwYWlkIGZvciBwcm9mZXNzaW9uYWwgZmVlcyBhbmQgYm9vayByZWltYnVyc2VtZW50cy5cXG5cXG5UaGUgY29yZSBwcm9kdWN0IGlzIGFuIGFkdmFuY2VkIHByb2Nlc3Mgc2ltdWxhdGlvbiwgbW9kZWxsaW5nIGFuZCBvcHRpbWlzYXRpb24gc29mdHdhcmUgZm9yIHRoZSBwcm9jZXNzIGluZHVzdHJpZXMgKHBvd2VyLCBiaW9jaGVtaWNhbCBhbmQgcGhhcm1hY2V1dGljYWwpLiBKb2luaW5nIGFuIEFnaWxlIGRldmVsb3BtZW50IHRlYW0gYXMgYSBKYXZhIERldmVsb3BlciB5b3Ugd2lsbCBmb2N1cyBvbiBidWlsZGluZyBhIG5ldyB3ZWIgYmFzZWQgc3lzdGVtIGluIGxpbmUgd2l0aCB0aGUgY3VycmVudCBkZXNrdG9wIGFwcGxpY2F0aW9uLiBZb3UnbGwgdXNlIG11bHRpLXRocmVhZGVkIEphdmEgYW5kIFNwcmluZyB3aXRoaW4gYSBtaWNyb3NlcnZpY2VzIGVudmlyb25tZW50IHdpdGggRG9ja2VyIHVzZWQgZm9yIGNvbnRhaW5lcmlzYXRpb24uXFxuXFxuQmFzZWQgaW4gV2VzdCBMb25kb24geW91J2xsIGJlIHdvcmtpbmcgd2l0aCBhIGRpdmVyc2UgaW50ZXJuYXRpb25hbCB0ZWFtLlxcblxcblRoZSBjb21wYW55IGlzIGFibGUgdG8gb2ZmZXIgYSByZW1vdGUgaW50ZXJ2aWV3IGFuZCBvbmJvYXJkaW5nIHByb2Nlc3MgZHVyaW5nIHRoZSBjdXJyZW50IHNvY2lhbCBkaXN0YW5jaW5nIG1lYXN1cmVzLlwiLFxuICBcdGRhdGVBZGRlZCA6IFwiMTEvMDQvMjAyMCwgMTU6MjI6MTRcIlxuICB9LFxuICB7XG4gIFx0am9iVGl0bGUgOiBcIlNlbmlvciBDYWx5cHNvIFNvZnR3YXJlIERldmVsb3BlciAtIExvbmRvblwiLFxuICBcdGNvbXBhbnlOYW1lIDogXCJOZXh1cyBSZWNydWl0bWVudFwiLFxuICBcdGVtYWlsIDogXCJzbGFsYWxhdmlrMUBtYWlsLnJ1XCIsXG4gIFx0am9iVHlwZSA6IFwiQ29udHJhY3RcIixcbiAgXHRtaW5pbXVtU2FsYXJ5IDogXCI0MDBcIixcbiAgXHRtYXhpbXVtU2FsYXJ5IDogXCI2MDBcIixcbiAgXHRsb2NhdGlvbiA6IFwiQ2l0eSBvZiBMb25kb25cIixcbiAgXHRlc3NlbnRpYWxSZXF1aXJlbWVudHMgOiBcIkEgZGVncmVlIGluIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgb3IgZXF1aXZhbGVudC5cXG5FeHBlcmllbmNlIG9mIHdvcmtpbmcgaW4gYSByZWd1bGF0ZWQgZW52aXJvbm1lbnQsIGlkZWFsbHkgRmluYW5jaWFsIFNlcnZpY2VzXFxuU2VuaW9yIGxldmVsIGFuYWx5c3QgZGV2ZWxvcGVyL1RlYW0gTGVhZGVyXFxuRXhwZXJpZW5jZSBvZiAvIEFzcGlyZSB0byBsZWFkaW5nIHN1cHBvcnQvZGV2ZWxvcG1lbnQgdGVhbXNcXG5Lbm93bGVkZ2UgYW5kIHVuZGVyc3RhbmRpbmcgb2YgdHJhZGUgbGlmZSBjeWNsZSBjb3ZlcmluZyBiYWNrIG9mZmljZSBwcm9jZXNzZXMgbGlrZSBTZXR0bGVtZW50cywgY29sbGF0ZXJhbCBhbmQgc2VjdXJpdGllcy5cXG5KYXZhXFxuQ2FseXBzbyBBUElcXG5PcmFjbGUgREJNU1xcbkNhbHlwc28gVjE0IG9yIGxhdGVyXFxuQ0FUVCBBdXRvbWF0aW9uIGFuZCB0ZXN0aW5nIHRvb2xcIixcbiAgXHRiZW5lZmljaWFsUmVxdWlyZW1lbnRzIDogXCJcIixcbiAgICBkZXNjcmlwdGlvbiA6IFwiT3VyIENsaWVudCBpcyBzZWVraW5nIGEgU2VuaW9yIENhbHlwc28gU29mdHdhcmUgRGV2ZWxvcGVyIHdpdGggMyB0byA1IHllYXJzIGV4cGVyaWVuY2UuXFxuXFxuXFxuQ2FseXBzbyBWMTQgYXMgaXRzIENvbGxhdGVyYWwgTWFuYWdlbWVudCBzeXN0ZW0gYW5kIGFyZSBpbnZlc3RpZ2F0aW5nIGludHJvZHVjaW5nIGZ1cnRoZXIgYnVzaW5lc3MgbGluZXMgbGlrZSBjYXNoIG1hbmFnZW1lbnQsIEZYIGFuZCBzZWN1cml0aWVzLlxcblxcblRoZSBDbGllbnQgYXJlIGxvb2tpbmcgdG8gYnVpbGQgYSB0ZWFtIG9mIHN1cHBvcnQgYW5hbHlzdCBhbmQgYW5hbHlzdCBkZXZlbG9wZXJzIHRvIHByb3ZpZGUgZmlyc3QgbGluZSBhbmQgZGV2ZWxvcG1lbnQgY2FwYWJpbGl0aWVzIGFuZCB0aGlzIGFuYWx5c3QgZGV2ZWxvcGVyIHJvbGUgc2l0cyBpbiB0aGUgUnVuIHRoZSBiYW5rIHRlYW0gKFJUQikuXCIsXG4gIFx0ZGF0ZUFkZGVkIDogXCIxMS8wNC8yMDIwLCAxNTo0Nzo0MlwiXG4gIH0sXG4gIHtcbiAgXHRqb2JUaXRsZSA6IFwiSnVuaW9yXCIsXG4gIFx0Y29tcGFueU5hbWUgOiBcIkhhbmRsZSBSZWNydWl0bWVudCBMdGRcIixcbiAgXHRlbWFpbCA6IFwic2xhbGFsYXZpazFAbWFpbC5ydVwiLFxuICBcdGpvYlR5cGUgOiBcIlBlcm1hbmVudFwiLFxuICBcdG1pbmltdW1TYWxhcnkgOiBcIjQwMDAwXCIsXG4gIFx0bWF4aW11bVNhbGFyeSA6IFwiNTAwMDBcIixcbiAgXHRsb2NhdGlvbiA6IFwiQ2VudHJhbCBMb25kb25cIixcbiAgXHRlc3NlbnRpYWxSZXF1aXJlbWVudHMgOiBcIk1vZGVybiBKYXZhIERldmVsb3BtZW50IGV4cGVyaWVuY2UuXFxuRXhwZXJpZW5jZSB3aXRoIENvbnRhaW5lcmlzZWQgSmF2YSA4KyBNaWNyb3NlcnZpY2VzLCBTcHJpbmcgQm9vdCwgTm9TUUwgRGF0YWJhc2VzLCBNZXNzYWdpbmcvUHViLVN1YiwgQ0kvQ0QsIERvY2tlciwgR2l0LlxcblJFU1RmdWwgQVBJIGRlc2lnbiBwcmluY2lwbGVzLlxcblRERCBhbmQgQkRELlwiLFxuICBcdGJlbmVmaWNpYWxSZXF1aXJlbWVudHMgOiBcIkphdmFTY3JpcHQgLyBSZWFjdCAvIE5vZGUuSlMuXFxuRXhwZXJpZW5jZSB3aXRoaW4gVFYvYnJvYWRjYXN0IGluZHVzdHJ5IGEgc3Ryb25nIGJlbmVmaXQuXFxuS3ViZXJuZXRlc1xcbkFwYWNoZSBDYXNzYW5kcmFcXG5KZW5raW5zXFxuR0NQIG9yIEFXUyBleHBlcmllbmNlLlwiLFxuICBcdGRlc2NyaXB0aW9uIDogXCJXZSBjdXJyZW50bHkgaGF2ZSBhIEphdmEgRGV2ZWxvcGVyIHJvbGUgYXZhaWxhYmxlIGZvciBoaWdoIHByb2ZpbGUgYnJvYWRjYXN0IG1lZGlhIGNvbXBhbnkgd2hvJ3Mgb2ZmaWNlcyBhcmUgYmFzZWQgaW4gY2VudHJhbCBMb25kb24uXFxuXFxuVGhlIHJpZ2h0IGNhbmRpZGF0ZSB3aWxsIGhhdmUgYW4gaW50ZXJlc3QgaW4gcHJvbW90aW5nIGhpZ2ggcXVhbGl0eSBjb2RlLCBnb29kIGVuZ2luZWVyaW5nIHByYWN0aWNlcyBhbmQgY2xlYXIgZG9jdW1lbnRhdGlvbi4gQW5kIG9mZmVyIGV4Y2VsbGVudCBiZW5lZml0cyBpbmNsdWRpbmcgYm9udXMuXFxuXFxuUmVzcG9uc2liaWxpdGllczpcXG5cXG5UbyBjcmVhdGUsIGV2b2x2ZSBhbmQgbWFpbnRhaW4gYSByb2J1c3QgcGxhdGZvcm0uXFxuQmVjb21lIHRoZSB0ZWNobmljYWwgYXV0aG9yaXR5IG9uIG91ciBjbG91ZCBwbGF0Zm9ybSBhbmQgaGVscCBpbmZvcm0gb3VyIG92ZXJhbGwgdGVjaG5pY2FsIGRpcmVjdGlvbi5cXG5Gb3JtdWxhdGUgZ3VpZGVsaW5lcyBmb3IgZGV2ZWxvcG1lbnQgcHJhY3RpY2VzIGFuZCBvdmVyc2VlIGltcGxlbWVudGF0aW9uLlxcbmVuc3VyaW5nIHRoZSBzbW9vdGggb3BlcmF0aW9uIG9mIHJvYnVzdCBDSS9DRCBwaXBlbGluZXMgYW5kIHdvcmtmbG93cy5cXG5Xb3JrIHdpdGggUHJvZHVjdCB0byB0cmFuc2xhdGUgcHJvZHVjdCByZXF1aXJlbWVudHMgaW50byBhcmNoaXRlY3R1cmFsIGJsdWVwcmludHMgaW4gbGluZSB3aXRoIG91ciBjbG91ZCBtaWNyb3NlcnZpY2VzIHN0cmF0ZWd5XFxuZGVsaXZlciBjbGVhbiBjb2RlIGluIGEgbGVhbiBhbmQgYWdpbGUgZmFzaGlvbjtcIixcbiAgXHRkYXRlQWRkZWQgOiBcIjExLzA0LzIwMjAsIDE2OjA1OjI4XCJcbiAgfSxcblxuXTtcblxuZXhwb3J0IGRlZmF1bHQgam9icztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "jobs.js"
      ],
      "names": [
        "jobs",
        "jobTitle",
        "companyName",
        "email",
        "jobType",
        "minimumSalary",
        "maximumSalary",
        "location",
        "essentialRequirements",
        "beneficialRequirements",
        "description",
        "dateAdded"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG,CACX;AACCC,EAAAA,QAAQ,EAAG,iCADZ;AAECC,EAAAA,WAAW,EAAG,eAFf;AAGCC,EAAAA,KAAK,EAAG,qBAHT;AAICC,EAAAA,OAAO,EAAG,WAJX;AAKCC,EAAAA,aAAa,EAAG,OALjB;AAMCC,EAAAA,aAAa,EAAG,OANjB;AAOCC,EAAAA,QAAQ,EAAG,aAPZ;AAQCC,EAAAA,qBAAqB,EAAG,+OARzB;AASCC,EAAAA,sBAAsB,EAAG,qCAT1B;AAUCC,EAAAA,WAAW,EAAG,88BAVf;AAWCC,EAAAA,SAAS,EAAG;AAXb,CADW,EAcX;AACCV,EAAAA,QAAQ,EAAG,4CADZ;AAECC,EAAAA,WAAW,EAAG,mBAFf;AAGCC,EAAAA,KAAK,EAAG,qBAHT;AAICC,EAAAA,OAAO,EAAG,UAJX;AAKCC,EAAAA,aAAa,EAAG,KALjB;AAMCC,EAAAA,aAAa,EAAG,KANjB;AAOCC,EAAAA,QAAQ,EAAG,gBAPZ;AAQCC,EAAAA,qBAAqB,EAAG,+bARzB;AASCC,EAAAA,sBAAsB,EAAG,EAT1B;AAUEC,EAAAA,WAAW,EAAG,4bAVhB;AAWCC,EAAAA,SAAS,EAAG;AAXb,CAdW,EA2BX;AACCV,EAAAA,QAAQ,EAAG,QADZ;AAECC,EAAAA,WAAW,EAAG,wBAFf;AAGCC,EAAAA,KAAK,EAAG,qBAHT;AAICC,EAAAA,OAAO,EAAG,WAJX;AAKCC,EAAAA,aAAa,EAAG,OALjB;AAMCC,EAAAA,aAAa,EAAG,OANjB;AAOCC,EAAAA,QAAQ,EAAG,gBAPZ;AAQCC,EAAAA,qBAAqB,EAAG,8MARzB;AASCC,EAAAA,sBAAsB,EAAG,yJAT1B;AAUCC,EAAAA,WAAW,EAAG,6yBAVf;AAWCC,EAAAA,SAAS,EAAG;AAXb,CA3BW,CAAb;eA2CeX,I",
      "sourceRoot": "/Users/Jaroslav/Desktop/COMP0029/employment-website-backend/src",
      "sourcesContent": [
        "const jobs = [\n  {\n  \tjobTitle : \"Java Developer - Remote Process\",\n  \tcompanyName : \"Client Server\",\n  \temail : \"slalalavik1@mail.ru\",\n  \tjobType : \"Permanent\",\n  \tminimumSalary : \"35000\",\n  \tmaximumSalary : \"50000\",\n  \tlocation : \"West London\",\n  \tessentialRequirements : \"Java development experience ideally including multi-threading\\nExperience with Spring framework\\nTechnologist, keen to learn and work with modern tools in a microservices / DevOps environment\\nCollaborative with good communication skills\",\n  \tbeneficialRequirements : \"Experience with Docker, Kubernetes \",\n  \tdescription : \"Java Developer / Junior Software Engineer **Remote Process WFH**. Would like to progress your career working on complex and interesting systems? You could be joining a scientific software house and enjoying perks such as flexible working and a tailor made training and career development path with paid for professional fees and book reimbursements.\\n\\nThe core product is an advanced process simulation, modelling and optimisation software for the process industries (power, biochemical and pharmaceutical). Joining an Agile development team as a Java Developer you will focus on building a new web based system in line with the current desktop application. You'll use multi-threaded Java and Spring within a microservices environment with Docker used for containerisation.\\n\\nBased in West London you'll be working with a diverse international team.\\n\\nThe company is able to offer a remote interview and onboarding process during the current social distancing measures.\",\n  \tdateAdded : \"11/04/2020, 15:22:14\"\n  },\n  {\n  \tjobTitle : \"Senior Calypso Software Developer - London\",\n  \tcompanyName : \"Nexus Recruitment\",\n  \temail : \"slalalavik1@mail.ru\",\n  \tjobType : \"Contract\",\n  \tminimumSalary : \"400\",\n  \tmaximumSalary : \"600\",\n  \tlocation : \"City of London\",\n  \tessentialRequirements : \"A degree in Information Technology or equivalent.\\nExperience of working in a regulated environment, ideally Financial Services\\nSenior level analyst developer/Team Leader\\nExperience of / Aspire to leading support/development teams\\nKnowledge and understanding of trade life cycle covering back office processes like Settlements, collateral and securities.\\nJava\\nCalypso API\\nOracle DBMS\\nCalypso V14 or later\\nCATT Automation and testing tool\",\n  \tbeneficialRequirements : \"\",\n    description : \"Our Client is seeking a Senior Calypso Software Developer with 3 to 5 years experience.\\n\\n\\nCalypso V14 as its Collateral Management system and are investigating introducing further business lines like cash management, FX and securities.\\n\\nThe Client are looking to build a team of support analyst and analyst developers to provide first line and development capabilities and this analyst developer role sits in the Run the bank team (RTB).\",\n  \tdateAdded : \"11/04/2020, 15:47:42\"\n  },\n  {\n  \tjobTitle : \"Junior\",\n  \tcompanyName : \"Handle Recruitment Ltd\",\n  \temail : \"slalalavik1@mail.ru\",\n  \tjobType : \"Permanent\",\n  \tminimumSalary : \"40000\",\n  \tmaximumSalary : \"50000\",\n  \tlocation : \"Central London\",\n  \tessentialRequirements : \"Modern Java Development experience.\\nExperience with Containerised Java 8+ Microservices, Spring Boot, NoSQL Databases, Messaging/Pub-Sub, CI/CD, Docker, Git.\\nRESTful API design principles.\\nTDD and BDD.\",\n  \tbeneficialRequirements : \"JavaScript / React / Node.JS.\\nExperience within TV/broadcast industry a strong benefit.\\nKubernetes\\nApache Cassandra\\nJenkins\\nGCP or AWS experience.\",\n  \tdescription : \"We currently have a Java Developer role available for high profile broadcast media company who's offices are based in central London.\\n\\nThe right candidate will have an interest in promoting high quality code, good engineering practices and clear documentation. And offer excellent benefits including bonus.\\n\\nResponsibilities:\\n\\nTo create, evolve and maintain a robust platform.\\nBecome the technical authority on our cloud platform and help inform our overall technical direction.\\nFormulate guidelines for development practices and oversee implementation.\\nensuring the smooth operation of robust CI/CD pipelines and workflows.\\nWork with Product to translate product requirements into architectural blueprints in line with our cloud microservices strategy\\ndeliver clean code in a lean and agile fashion;\",\n  \tdateAdded : \"11/04/2020, 16:05:28\"\n  },\n\n];\n\nexport default jobs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586617611829
  }
}