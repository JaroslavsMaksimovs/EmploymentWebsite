{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js\";\nimport React, { useState } from 'react';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n  const _useState = useState({\n    firstName: '',\n    surname: '',\n    email: '@',\n    password: '',\n    confirmPassword: '',\n    location: '',\n    education: '',\n    workExperience: '',\n    skills: '',\n    dateAdded: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        profileInfo = _useState2[0],\n        setProfileInfo = _useState2[1];\n\n  const register = async () => {\n    if (profileInfo.password === profileInfo.confirmPassword) {\n      const today = new Date();\n      setProfileInfo({\n        dateAdded: today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear() + ' ' + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n      });\n      const hashPassword = generate(profileInfo.password);\n      const result = await fetch('/api/seekers/add-new', {\n        method: 'post',\n        body: JSON.stringify(profileInfo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      setProfileInfo({\n        password: ''\n      });\n      setProfileInfo({\n        confirmPassword: ''\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"First Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: profileInfo.firstName,\n    onChange: event => setProfileInfo({\n      firstName: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Surname:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: profileInfo.surname,\n    onChange: event => setProfileInfo({\n      surname: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"E-mail:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: profileInfo.email,\n    onChange: event => setProfileInfo({\n      email: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    value: profileInfo.password,\n    onChange: event => setProfileInfo({\n      password: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Confirm Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    value: profileInfo.confirmPassword,\n    onChange: event => setProfileInfo({\n      confirmPassword: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: profileInfo.location,\n    onChange: event => setProfileInfo({\n      location: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Education:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: profileInfo.education,\n    onChange: event => setProfileInfo({\n      education: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Work Experience:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: profileInfo.workExperience,\n    onChange: event => setProfileInfo({\n      workExperience: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Skills:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: profileInfo.skills,\n    onChange: event => setProfileInfo({\n      skills: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => register(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js"],"names":["React","useState","generate","RegisterPage","firstName","surname","email","password","confirmPassword","location","education","workExperience","skills","dateAdded","profileInfo","setProfileInfo","register","today","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","hashPassword","result","fetch","method","body","JSON","stringify","headers","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n\n  const [profileInfo, setProfileInfo] = useState({ firstName: '', surname: '',\n    email: '@', password: '', confirmPassword: '', location: '', education: '',\n    workExperience: '', skills: '' , dateAdded: ''})\n\n\n  const register = async () => {\n    if (profileInfo.password === profileInfo.confirmPassword)\n    {\n      const today = new Date();\n      setProfileInfo({ dateAdded: today.getDate()+'.'+(today.getMonth()+1)+'.'+today.getFullYear()\n                         + ' ' + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() });\n      const hashPassword = generate(profileInfo.password);\n      const result = await fetch('/api/seekers/add-new', {\n        method: 'post',\n        body: JSON.stringify(profileInfo),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n    } else {\n      setProfileInfo({ password: '' });\n      setProfileInfo({ confirmPassword: '' });\n    }\n};\n\n\n    return (\n      <>\n        <div>\n          <h1>Register</h1>\n          <label>\n            First Name:\n            <input type=\"text\" value={profileInfo.firstName} onChange={(event) => setProfileInfo({ firstName: event.target.value })} />\n          </label>\n          <label>\n            Surname:\n            <input type=\"text\" value={profileInfo.surname} onChange={(event) => setProfileInfo({ surname: event.target.value })} />\n          </label>\n          <label>\n            E-mail:\n            <input type=\"text\" value={profileInfo.email} onChange={(event) => setProfileInfo({ email: event.target.value })} />\n          </label>\n          <label>\n            Password:\n            <input type=\"password\" value={profileInfo.password} onChange={(event) => setProfileInfo( {password: event.target.value })} />\n          </label>\n          <label>\n            Confirm Password:\n            <input type=\"password\" value={profileInfo.confirmPassword} onChange={(event) => setProfileInfo( {confirmPassword: event.target.value })} />\n          </label>\n          <label>\n            Location:\n            <input type=\"text\" value={profileInfo.location} onChange={(event) => setProfileInfo({ location: event.target.value })} />\n          </label>\n          <label>\n            Education:\n            <textarea rows=\"4\" cols=\"50\" value={profileInfo.education} onChange={(event) => setProfileInfo({ education: event.target.value })} />\n          </label>\n          <label>\n            Work Experience:\n            <textarea rows=\"4\" cols=\"50\" value={profileInfo.workExperience} onChange={(event) => setProfileInfo({ workExperience: event.target.value })} />\n          </label>\n          <label>\n            Skills:\n            <textarea rows=\"4\" cols=\"50\" value={profileInfo.skills} onChange={(event) => setProfileInfo({ skills: event.target.value })}/>\n          </label>\n          <button onClick={() => register()}>Register</button>\n        </div>\n      </>\n    );\n\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}