{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js\";\nimport React from 'react';\n\nconst JobFindingButton = ({\n  user,\n  setUser\n}) => {\n  const typeFilter = jobs => {\n    if (user.jobType === 'Both') {\n      return jobs;\n    } else {\n      const result = jobs.filter(job => {\n        return user.jobType === job.jobType;\n      });\n      return result;\n    }\n  };\n\n  const salaryFilter = jobs => {\n    const result = jobs.filter(job => {\n      return user.salary <= job.maximumSalary;\n    });\n    return result;\n  };\n\n  const educationQuality = education => {\n    if (education === 'None') {\n      return 0;\n    } else if (education === 'High School Diploma') {\n      return 1;\n    } else if (education === \"Bachelor's Degree\") {\n      return 2;\n    } else if (education === \"Master's Degree\") {\n      return 3;\n    } else if (education === 'Doctoral Degree') {\n      return 4;\n    } else {\n      return 0;\n    }\n  };\n\n  const educationFilter = jobs => {\n    const result = jobs.filter(job => {\n      return educationQuality(user.education) >= educationQuality(job.education);\n    });\n    return result;\n  };\n\n  const experience = time => {\n    if (time === 'None') {\n      return 0;\n    } else if (time === 'Less than 1 year') {\n      return 1;\n    } else if (time === '1 to 2 years') {\n      return 2;\n    } else if (time === '2 to 3 years') {\n      return 3;\n    } else if (time === '3 to 4 years') {\n      return 4;\n    } else if (time === '4 to 5 years') {\n      return 5;\n    } else if (time === 'Over 5 years') {\n      return 6;\n    } else {\n      return 0;\n    }\n  };\n\n  const workExperienceFilter = jobs => {\n    const result = jobs.filter(job => {\n      return experience(user.workExperience) >= experience(job.workExperience);\n    });\n    return result;\n  };\n\n  const stringCompare = (string1, string2) => {\n    let matches = 0;\n\n    for (let i = 0; i < string1.length; i++) {\n      for (let j = 0; j < string2.length; j++) {\n        if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n          matches++;\n        }\n      }\n    }\n\n    if (string1.length > 0) {\n      return matches / string1.length;\n    } else {\n      return 1;\n    }\n  };\n\n  const checkMatching = (job, attribute) => {\n    const required = job[attribute].split(' ');\n\n    if (attribute === 'complementarySkills') {\n      attribute = 'skills';\n    }\n\n    const candidate = user[attribute].split(' ');\n    return stringCompare(required, candidate);\n  };\n\n  const skillsFilter = jobs => {\n    const result = jobs.filter(job => {\n      let matching = 0;\n      matching += checkMatching(job, 'skills') * 3;\n      matching += checkMatching(job, 'complementarySkills');\n      return matching > 1;\n    });\n    return result;\n  };\n\n  const findJob = async () => {\n    const result = await fetch('/api/vacancies/get-all-titles', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let jobs = await result.json();\n    jobs = typeFilter(jobs);\n    jobs = salaryFilter(jobs);\n    jobs = educationFilter(jobs);\n    jobs = workExperienceFilter(jobs);\n    jobs = skillsFilter(jobs);\n    const search = await fetch('/api/seekers/search', {\n      method: 'post',\n      body: JSON.stringify({\n        email: user.email,\n        jobs: jobs\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const userCopy = JSON.parse(JSON.stringify(user));\n    userCopy.search = 1;\n    setUser(userCopy);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"apply-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: findJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Find Job\")));\n};\n\nexport default JobFindingButton;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js"],"names":["React","JobFindingButton","user","setUser","typeFilter","jobs","jobType","result","filter","job","salaryFilter","salary","maximumSalary","educationQuality","education","educationFilter","experience","time","workExperienceFilter","workExperience","stringCompare","string1","string2","matches","i","length","j","replace","toLowerCase","checkMatching","attribute","required","split","candidate","skillsFilter","matching","findJob","fetch","method","headers","json","search","body","JSON","stringify","email","userCopy","parse"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst JobFindingButton = ({ user, setUser }) => {\n\n  const typeFilter = (jobs) => {\n    if (user.jobType === 'Both') {\n      return jobs;\n    } else {\n      const result = jobs.filter((job) => {\n        return (user.jobType === job.jobType);\n      });\n      return result;\n    }\n  }\n\n  const salaryFilter = (jobs) => {\n    const result = jobs.filter((job) => {\n      return (user.salary <= job.maximumSalary);\n    });\n    return result;\n  }\n\n  const educationQuality = (education) => {\n    if (education === 'None') {\n      return 0;\n    } else if (education === 'High School Diploma') {\n      return 1;\n    } else if (education === \"Bachelor's Degree\") {\n      return 2;\n    } else if (education === \"Master's Degree\") {\n      return 3;\n    } else if (education === 'Doctoral Degree') {\n      return 4;\n    } else {\n      return 0;\n    }\n  }\n\n  const educationFilter = (jobs) => {\n    const result = jobs.filter((job) => {\n      return (educationQuality(user.education) >= educationQuality(job.education));\n    });\n    return result;\n  }\n\n  const experience = (time) => {\n    if (time === 'None') {\n      return 0;\n    } else if (time === 'Less than 1 year') {\n      return 1;\n    } else if (time === '1 to 2 years') {\n      return 2;\n    } else if (time === '2 to 3 years') {\n      return 3;\n    } else if (time === '3 to 4 years') {\n      return 4;\n    } else if (time === '4 to 5 years') {\n      return 5;\n    } else if (time === 'Over 5 years') {\n      return 6;\n    } else {\n      return 0;\n    }\n  }\n\n  const workExperienceFilter = (jobs) => {\n    const result = jobs.filter((job) => {\n      return (experience(user.workExperience) >= experience(job.workExperience));\n    })\n    return result;\n  }\n\n  const stringCompare = (string1, string2) => {\n    let matches = 0;\n    for (let i = 0; i < string1.length; i++) {\n      for (let j = 0; j < string2.length; j++) {\n        if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n          matches++;\n        }\n      }\n    }\n    if (string1.length > 0) {\n      return matches/string1.length;\n    } else {\n      return 1;\n    }\n  }\n\n  const checkMatching = (job, attribute) => {\n    const required = job[attribute].split(' ');\n    if (attribute === 'complementarySkills') {\n      attribute = 'skills';\n    }\n    const candidate = user[attribute].split(' ');\n    return (stringCompare(required, candidate));\n  }\n\n  const skillsFilter = (jobs) => {\n    const result = jobs.filter((job) => {\n      let matching = 0;\n      matching += checkMatching(job, 'skills') * 3;\n      matching += checkMatching(job, 'complementarySkills');\n      return matching > 1;\n    });\n    return result;\n  }\n\nconst findJob = async () => {\n\n  const result = await fetch('/api/vacancies/get-all-titles',\n  {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n  let jobs = await result.json();\n  jobs = typeFilter(jobs);\n  jobs = salaryFilter(jobs);\n  jobs = educationFilter(jobs);\n  jobs = workExperienceFilter(jobs);\n  jobs = skillsFilter(jobs);\n\n  const search = await fetch('/api/seekers/search',\n  {\n    method: 'post',\n    body: JSON.stringify({ email: user.email, jobs: jobs }),\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  const userCopy = JSON.parse(JSON.stringify(user));\n  userCopy.search = 1;\n  setUser(userCopy);\n};\n\n\n  return (\n    <>\n      <div className=\"apply-button\">\n        <button onClick={findJob}>Find Job</button>\n      </div>\n    </>\n  )\n\n}\n\nexport default JobFindingButton;\n"]},"metadata":{},"sourceType":"module"}