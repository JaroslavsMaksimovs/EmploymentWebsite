{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst JobSearchList = ({\n  match\n}) => {\n  const _useState = useState({\n    jobs: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobTitles = _useState2[0],\n        setJobTitles = _useState2[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = match.params.query;\n      const result = {};\n\n      if (query === undefined) {\n        result = await fetch('/api/vacancies/getAllTitles', {\n          method: 'post'\n        });\n      } else {\n        result = await fetch(\"/api/vacancies/search/\".concat(query));\n      }\n\n      const body = await result.json();\n      setJobTitles(body);\n    };\n\n    fetchData();\n  });\n  const jobsArray = jobTitles.jobs;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Various IT jobs \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, jobsArray.map((job, key) => React.createElement(Link, {\n    key: key,\n    to: \"/vacancies/\".concat(job),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, job))))));\n};\n\nexport default JobSearchList;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js"],"names":["React","useState","useEffect","Link","JobSearchList","match","jobs","jobTitles","setJobTitles","fetchData","query","params","result","undefined","fetch","method","body","json","jobsArray","map","job","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACDJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CADP;AAAA;AAAA,QAC5BC,SAD4B;AAAA,QACjBC,YADiB;;AAGnCN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,GAAGL,KAAK,CAACM,MAAN,CAAaD,KAA3B;AACA,YAAME,MAAM,GAAG,EAAf;;AACA,UAAIF,KAAK,KAAKG,SAAd,EAAyB;AACvBD,QAAAA,MAAM,GAAG,MAAME,KAAK,CAAC,6BAAD,EACpB;AACEC,UAAAA,MAAM,EAAE;AADV,SADoB,CAApB;AAID,OALD,MAKO;AACLH,QAAAA,MAAM,GAAG,MAAME,KAAK,iCAA0BJ,KAA1B,EAApB;AACD;;AACD,YAAMM,IAAI,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAAnB;AACAT,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD,KAbD;;AAcAP,IAAAA,SAAS;AACV,GAhBQ,CAAT;AAkBA,QAAMS,SAAS,GAAGX,SAAS,CAACD,IAA5B;AAIA,SACA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,SAAS,CAACC,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAX;AAAgB,IAAA,EAAE,uBAAgBD,GAAhB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CADF,CADD,CADH,CADF,CAFF,CADA;AAaA,CAtCF;;AAyCA,eAAehB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst JobSearchList = ({ match }) => {\n  const [jobTitles, setJobTitles] = useState({jobs: []});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const query = match.params.query;\n      const result = {};\n      if (query === undefined) {\n        result = await fetch('/api/vacancies/getAllTitles',\n        {\n          method: 'post'\n        });\n      } else {\n        result = await fetch(`/api/vacancies/search/${query}`);\n      }\n      const body = await result.json();\n      setJobTitles(body);\n    }\n    fetchData();\n  });\n\n  const jobsArray = jobTitles.jobs;\n\n\n\n  return(\n  <>\n    <h1> Various IT jobs </h1>\n    <div>\n      <ul>\n        {jobsArray.map((job, key) => (\n          <Link key={key} to={`/vacancies/${job}`}>\n            <p>{job}</p>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  </>\n)};\n\n\nexport default JobSearchList;\n"]},"metadata":{},"sourceType":"module"}