{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js\";\nimport React, { useState } from 'react';\n\nconst RegisterPage = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        surname = _useState4[0],\n        setSurname = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        location = _useState10[0],\n        setLocation = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        education = _useState12[0],\n        setEducation = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        workExperience = _useState14[0],\n        setWorkExperience = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        skills = _useState16[0],\n        setSkills = _useState16[1];\n\n  const register = async () => {\n    const today = new Date();\n    const dateAdded = today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear() + ' ' + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const result = await fetch('/api/seekers/add-new', {\n      method: 'post',\n      body: JSON.stringify({\n        firstName,\n        surname,\n        email,\n        password,\n        location,\n        education,\n        workExperience,\n        skills,\n        dateAdded\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"First Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: firstName,\n    onChange: event => setFirstName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Surname:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: surname,\n    onChange: event => setSurname(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"E-mail:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: location,\n    onChange: event => setLocation(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Education:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: education,\n    onChange: event => setEducation(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Work Experience:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: workExperience,\n    onChange: event => setWorkExperience(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Skills:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    value: skills,\n    onChange: event => setSkills(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => register(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js"],"names":["React","useState","RegisterPage","firstName","setFirstName","surname","setSurname","email","setEmail","password","setPassword","location","setLocation","education","setEducation","workExperience","setWorkExperience","skills","setSkills","register","today","Date","dateAdded","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","result","fetch","method","body","JSON","stringify","headers","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst RegisterPage = () => {\n  const [firstName, setFirstName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [location, setLocation] = useState('');\n  const [education, setEducation] = useState('');\n  const [workExperience, setWorkExperience] = useState('');\n  const [skills, setSkills] = useState('');\n\n\n  const register = async () => {\n    const today = new Date();\n    const dateAdded = today.getDate()+'.'+(today.getMonth()+1)+'.'+today.getFullYear()\n                       + ' ' + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const result = await fetch('/api/seekers/add-new', {\n      method: 'post',\n      body: JSON.stringify({firstName, surname, email, password, location, education,\n                   workExperience, skills, dateAdded}),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n  };\n\n\n    return (\n      <>\n        <div>\n          <h1>Register</h1>\n          <label>\n            First Name:\n            <input type=\"text\" value={firstName} onChange={(event) => setFirstName(event.target.value)} />\n          </label>\n          <label>\n            Surname:\n            <input type=\"text\" value={surname} onChange={(event) => setSurname(event.target.value)} />\n          </label>\n          <label>\n            E-mail:\n            <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\n          </label>\n          <label>\n            Password:\n            <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n          </label>\n          <label>\n            Location:\n            <input type=\"text\" value={location} onChange={(event) => setLocation(event.target.value)} />\n          </label>\n          <label>\n            Education:\n            <textarea rows=\"4\" cols=\"50\" value={education} onChange={(event) => setEducation(event.target.value)} />\n          </label>\n          <label>\n            Work Experience:\n            <textarea rows=\"4\" cols=\"50\" value={workExperience} onChange={(event) => setWorkExperience(event.target.value)} />\n          </label>\n          <label>\n            Skills:\n            <textarea rows=\"4\" cols=\"50\" value={skills} onChange={(event) => setSkills(event.target.value)}/>\n          </label>\n          <button onClick={() => register()}>Register</button>\n        </div>\n      </>\n    );\n\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}