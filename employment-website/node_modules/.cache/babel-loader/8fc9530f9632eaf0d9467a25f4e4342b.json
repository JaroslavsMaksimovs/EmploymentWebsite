{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/LoginPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { verify } from 'password-hash';\n\nconst LoginPage = () => {\n  const _useState = useState({\n    state: 'default',\n    account: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        document.getElementById(\"button\").click();\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  const login = async () => {\n    const result = await fetch(\"/api/seekers/\".concat(email));\n\n    if (result.status !== 200) {\n      setState({\n        state: 'incorrectEmail'\n      });\n    } else {\n      const accountInfo = await result.json();\n      const hashPassword = accountInfo.hashPassword;\n\n      if (verify(password, hashPassword)) {\n        sessionStorage.setItem('state', {\n          status: 'seekerLogin',\n          account: email\n        });\n        setState({\n          state: 'loginSuccessful',\n          account: email\n        });\n        console.log(sessionStorage.getItem('state')); //    window.location.replace('/vacancies/');\n      } else {\n        setState({\n          state: 'incorrectPassword'\n        });\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"E-mail:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    style: {\n      display: state.state === 'loginSuccessful' ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Login to \", state.account, \" successful \"), React.createElement(\"p\", {\n    style: {\n      display: state.state === 'incorrectEmail' ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" This account does not exist \"), React.createElement(\"p\", {\n    style: {\n      display: state.state === 'incorrectPassword' ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" Incorrect password \"), React.createElement(\"button\", {\n    id: \"button\",\n    onClick: () => login(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Log in\")));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/LoginPage.js"],"names":["React","useState","useEffect","Redirect","verify","LoginPage","state","account","setState","email","setEmail","password","setPassword","listener","event","code","document","getElementById","click","addEventListener","removeEventListener","login","result","fetch","status","accountInfo","json","hashPassword","sessionStorage","setItem","console","log","getItem","target","value","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { verify } from 'password-hash';\n\nconst LoginPage = () => {\n  const [state, setState] = useState({ state: 'default', account: '' });\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        document.getElementById(\"button\").click();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n\n  const login = async () => {\n    const result = await fetch(`/api/seekers/${email}`);\n    if (result.status !== 200) {\n      setState({ state: 'incorrectEmail' });\n    } else {\n      const accountInfo = await result.json();\n      const hashPassword = accountInfo.hashPassword;\n      if (verify(password, hashPassword)) {\n        sessionStorage.setItem('state', { status: 'seekerLogin', account: email });\n        setState({ state: 'loginSuccessful', account: email });\n        console.log(sessionStorage.getItem('state'));\n    //    window.location.replace('/vacancies/');\n      } else {\n        setState({ state: 'incorrectPassword' });\n      }\n    }\n  };\n\n\n  return(\n    <>\n      <div>\n        <h1>Login</h1>\n        <label>\n          E-mail:\n          <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        </label>\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n        </label>\n        <p style={{ display: (state.state==='loginSuccessful') ? 'block' : 'none'}} > Login to {state.account} successful </p>\n        <p style={{ display: (state.state==='incorrectEmail') ? 'block' : 'none'}}> This account does not exist </p>\n        <p style={{ display: (state.state==='incorrectPassword') ? 'block' : 'none'}}> Incorrect password </p>\n        <button id=\"button\" onClick={() => login()}>Log in</button>\n      </div>\n    </>\n  );\n\n\n\n\n}\n\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}