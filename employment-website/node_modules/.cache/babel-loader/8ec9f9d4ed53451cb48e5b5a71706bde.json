{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js\";\nimport React, { useState } from 'react';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n  const [account, setAccount] = useState({\n    firstName: '',\n    surname: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    location: '',\n    education: '',\n    workExperience: '',\n    skills: ''\n  });\n\n  const register = async () => {\n    if (account.password === account.confirmPassword) {\n      var body = account;\n      const dateAdded = new Date().toLocaleString();\n      body.dateAdded = dateAdded;\n      body.hashPassword = generate(account.password);\n      delete body.password;\n      delete body.confirmPassword;\n      console.log(body);\n      const result = await fetch('/api/seekers/add-new', {\n        method: 'post',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      setAccount({\n        firstName: account.firstName,\n        surname: account.surname,\n        email: account.email,\n        password: '',\n        confirmPassword: '',\n        location: account.location,\n        education: account.education,\n        workExperience: account.workExperience,\n        skills: account.skills\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const accountCopy = JSON.parse(JSON.stringify(account));\n    accountCopy[event.target.name] = event.target.value;\n    setAccount(accountCopy);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"First Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    value: account.firstName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Surname:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"surname\",\n    value: account.surname,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"E-mail:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: account.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: account.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Confirm Password:\", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: account.confirmPassword,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: account.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Education:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"education\",\n    value: account.education,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Work Experience:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"workExperience\",\n    value: account.workExperience,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Skills:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"skills\",\n    value: account.skills,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => register(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js"],"names":["React","useState","generate","RegisterPage","account","setAccount","firstName","surname","email","password","confirmPassword","location","education","workExperience","skills","register","body","dateAdded","Date","toLocaleString","hashPassword","console","log","result","fetch","method","JSON","stringify","headers","handleChange","event","accountCopy","parse","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n  const [account, setAccount] = useState({ firstName: '', surname: '', email: '', password: '', confirmPassword: '',\n                                         location: '', education: '', workExperience: '', skills: ''});\n\n\n\n  const register = async () => {\n    if (account.password === account.confirmPassword)\n    {\n      var body = account;\n\n      const dateAdded = new Date().toLocaleString();\n      body.dateAdded = dateAdded;\n\n      body.hashPassword = generate(account.password);\n      delete body.password;\n      delete body.confirmPassword;\n      console.log(body);\n\n      const result = await fetch('/api/seekers/add-new', {\n        method: 'post',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n    } else {\n      setAccount({ firstName: account.firstName, surname: account.surname, email: account.email, password: '',\n                   confirmPassword: '', location: account.location, education: account.education,\n                   workExperience: account.workExperience, skills: account.skills });\n    }\n\n  };\n\n  const handleChange = (event) => {\n    const accountCopy = JSON.parse(JSON.stringify(account));\n    accountCopy[event.target.name] = event.target.value;\n    setAccount(accountCopy);\n  }\n\n\n\n    return (\n      <>\n        <div>\n          <h1>Register</h1>\n          <label>\n            First Name:\n            <input type=\"text\" name=\"firstName\" value={account.firstName} onChange={handleChange} />\n          </label>\n          <label>\n            Surname:\n            <input type=\"text\" name=\"surname\" value={account.surname} onChange={handleChange} />\n          </label>\n          <label>\n            E-mail:\n            <input type=\"text\" name=\"email\" value={account.email} onChange={handleChange} />\n          </label>\n          <label>\n            Password:\n            <input type=\"password\" name=\"password\" value={account.password} onChange={handleChange} />\n          </label>\n          <label>\n            Confirm Password:\n            <input type=\"password\" name=\"confirmPassword\" value={account.confirmPassword} onChange={handleChange} />\n          </label>\n          <label>\n            Location:\n            <input type=\"text\" name=\"location\" value={account.location} onChange={handleChange} />\n          </label>\n          <label>\n            Education:\n            <textarea rows=\"4\" cols=\"50\" name=\"education\" value={account.education} onChange={handleChange} />\n          </label>\n          <label>\n            Work Experience:\n            <textarea rows=\"4\" cols=\"50\" name=\"workExperience\" value={account.workExperience} onChange={handleChange} />\n          </label>\n          <label>\n            Skills:\n            <textarea rows=\"4\" cols=\"50\" name=\"skills\" value={account.skills} onChange={handleChange}/>\n          </label>\n          <button onClick={() => register()}>Register</button>\n        </div>\n      </>\n    );\n\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}