{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({\n    jobTitle: '',\n    companyName: '',\n    email: '',\n    jobType: 'Permanent',\n    minimumSalary: '',\n    maximumSalary: '',\n    location: '',\n    description: '',\n    education: 'None',\n    workExperience: 'None',\n    skills: '',\n    complementarySkills: ''\n  });\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n  const [error, setError] = useState('');\n  const [navigate, setNavigate] = useState(false);\n\n  const typeFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      if (seeker.jobType === 'Both') {\n        return true;\n      } else {\n        return seeker.jobType === vacancy.jobType;\n      }\n    });\n    return result;\n  };\n\n  const salaryFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return seeker.salary <= vacancy.maximumSalary;\n    });\n    return result;\n  };\n\n  const educationQuality = education => {\n    if (education === 'None') {\n      return 0;\n    } else if (education === 'High School Diploma') {\n      return 1;\n    } else if (education === \"Bachelor's Degree\") {\n      return 2;\n    } else if (education === \"Master's Degree\") {\n      return 3;\n    } else if (education === 'Doctoral Degree') {\n      return 4;\n    } else {\n      return 0;\n    }\n  };\n\n  const educationFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return educationQuality(seeker.education) >= educationQuality(vacancy.education);\n    });\n    return result;\n  };\n\n  const experience = time => {\n    if (time === 'None') {\n      return 0;\n    } else if (time === 'Less than 1 year') {\n      return 1;\n    } else if (time === '1 to 2 years') {\n      return 2;\n    } else if (time === '2 to 3 years') {\n      return 3;\n    } else if (time === '3 to 4 years') {\n      return 4;\n    } else if (time === '4 to 5 years') {\n      return 5;\n    } else if (time === 'Over 5 years') {\n      return 6;\n    } else {\n      return 0;\n    }\n  };\n\n  const workExperienceFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return experience(seekers.workExperience) >= experience(vacancy.workExperience);\n    });\n    return result;\n  };\n\n  const stringCompare = (string1, string2) => {\n    let matches = 0;\n\n    for (let i = 0; i < string1.length; i++) {\n      for (let j = 0; j < string2.length; j++) {\n        if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n          matches++;\n        }\n      }\n    }\n\n    if (string1.length > 0) {\n      return matches / string1.length;\n    } else {\n      return 1;\n    }\n  };\n\n  const checkMatching = (seeker, attribute) => {\n    const required = vacancy[attribute].split(' ');\n\n    if (attribute === 'complementarySkills') {\n      attribute = 'skills';\n    }\n\n    const candidate = seeker[attribute].split(' ');\n    return stringCompare(required, candidate);\n  };\n\n  const skillsFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      let matching = 0;\n      matching += checkMatching(seeker, 'skills') * 3;\n      matching += checkMatching(seeker, 'complementarySkills');\n      return matching > 1;\n    });\n    return result;\n  };\n\n  const addVacancy = async () => {\n    if (vacancy.jobTitle.length > 2) {\n      if (vacancy.email.includes('@', 1) && vacancy.email.includes('.', 3)) {\n        let body = vacancy;\n        const dateAdded = new Date().toLocaleString();\n        body.dateAdded = dateAdded;\n        const result = await fetch('/api/vacancies/add-new', {\n          method: 'post',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const response = await result.json();\n\n        if (response.message === 'This job name is already taken') {\n          setError('nameTaken');\n        } else {\n          const result = await fetch('/api/seekers/get-all-searching', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          let seekers = await result.json();\n          seekers = typeFilter(seekers);\n          seekers = salaryFilter(seekers);\n          seekers = educationFilter(seekers);\n          seekers = workExperienceFilter(seekers);\n          seekers = skillsFilter(seekers);\n\n          if (seekers.length) {\n            const search = await fetch('/api/vacancies/search', {\n              method: 'post',\n              body: JSON.stringify({\n                jobTitle: vacancy.jobTitle,\n                seekers: seekers\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n          }\n\n          setNavigate(true);\n        }\n      } else {\n        setError('invalidEmail');\n      }\n    } else {\n      setError('invalidTitle');\n    }\n  };\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    } else {\n      setSalaryDescription('£ per year');\n    }\n  }, [vacancy.jobType]);\n\n  const handleChange = event => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  };\n\n  if (navigate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"loginbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Add new Vacancy\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Job Title:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"jobTitle\",\n    value: vacancy.jobTitle,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), error === 'nameTaken' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"This job title is already taken. Please choose another one\"), error === 'invalidTitle' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Please select a valid Job Title\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Company Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"companyName\",\n    value: vacancy.companyName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: vacancy.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), error === 'invalidEmail' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Please enter a valid e-mail\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Employment Type:\"), React.createElement(\"select\", {\n    name: \"jobType\",\n    value: vacancy.jobType,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Permanent\"), React.createElement(\"option\", {\n    value: \"Contract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Contract\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Minimum Salary (\", salaryDesciption, \"):\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"minimumSalary\",\n    value: vacancy.minimumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Maximum Salary (\", salaryDesciption, \"):\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"maximumSalary\",\n    value: vacancy.maximumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Location:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: vacancy.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"textarea\", {\n    rows: \"6\",\n    cols: \"50\",\n    name: \"description\",\n    value: vacancy.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Education Required:\"), React.createElement(\"select\", {\n    name: \"education\",\n    value: vacancy.education,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"High School Diploma\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"High School Diploma\"), React.createElement(\"option\", {\n    value: \"Bachelor's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Bachelor's Degree\"), React.createElement(\"option\", {\n    value: \"Master's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Master's Degree\"), React.createElement(\"option\", {\n    value: \"Doctoral Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Doctoral Degree\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Work Experience Required:\"), React.createElement(\"select\", {\n    name: \"workExperience\",\n    value: vacancy.workExperience,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"Less than 1 year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Less than 1 year\"), React.createElement(\"option\", {\n    value: \"1 to 2 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"1 to 2 years\"), React.createElement(\"option\", {\n    value: \"2 to 3 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"2 to 3 years\"), React.createElement(\"option\", {\n    value: \"3 to 4 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"3 to 4 years\"), React.createElement(\"option\", {\n    value: \"4 to 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"4 to 5 years\"), React.createElement(\"option\", {\n    value: \"Over 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Over 5 years\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Skills Required:\"), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"skills\",\n    value: vacancy.skills,\n    placeholder: \"Use keywords separated by commas\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Complementary Skills:\"), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"complementarySkills\",\n    placeholder: \"Use keywords separated by commas\",\n    value: vacancy.complementarySkills,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: addVacancy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Add new vacancy\")));\n};\n\nexport default NewVacancyPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js"],"names":["React","useState","useEffect","Redirect","NewVacancyPage","vacancy","setVacancy","jobTitle","companyName","email","jobType","minimumSalary","maximumSalary","location","description","education","workExperience","skills","complementarySkills","salaryDesciption","setSalaryDescription","error","setError","navigate","setNavigate","typeFilter","seekers","result","filter","seeker","salaryFilter","salary","educationQuality","educationFilter","experience","time","workExperienceFilter","stringCompare","string1","string2","matches","i","length","j","replace","toLowerCase","checkMatching","attribute","required","split","candidate","skillsFilter","matching","addVacancy","includes","body","dateAdded","Date","toLocaleString","fetch","method","JSON","stringify","headers","response","json","message","search","handleChange","event","vacancyCopy","parse","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({ jobTitle: '', companyName: '', email: '', jobType: 'Permanent', minimumSalary: '',\n  maximumSalary: '', location: '', description: '', education: 'None', workExperience: 'None', skills: '', complementarySkills: '' });\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n  const [error, setError] = useState('');\n  const [navigate, setNavigate] = useState(false);\n\n\n    const typeFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        if (seeker.jobType === 'Both') {\n          return true;\n        } else {\n          return (seeker.jobType === vacancy.jobType);\n        }\n      });\n      return result;\n    }\n\n    const salaryFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (seeker.salary <= vacancy.maximumSalary);\n      });\n      return result;\n    }\n\n    const educationQuality = (education) => {\n      if (education === 'None') {\n        return 0;\n      } else if (education === 'High School Diploma') {\n        return 1;\n      } else if (education === \"Bachelor's Degree\") {\n        return 2;\n      } else if (education === \"Master's Degree\") {\n        return 3;\n      } else if (education === 'Doctoral Degree') {\n        return 4;\n      } else {\n        return 0;\n      }\n    }\n\n    const educationFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (educationQuality(seeker.education) >= educationQuality(vacancy.education));\n      });\n      return result;\n    }\n\n    const experience = (time) => {\n      if (time === 'None') {\n        return 0;\n      } else if (time === 'Less than 1 year') {\n        return 1;\n      } else if (time === '1 to 2 years') {\n        return 2;\n      } else if (time === '2 to 3 years') {\n        return 3;\n      } else if (time === '3 to 4 years') {\n        return 4;\n      } else if (time === '4 to 5 years') {\n        return 5;\n      } else if (time === 'Over 5 years') {\n        return 6;\n      } else {\n        return 0;\n      }\n    }\n\n    const workExperienceFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (experience(seekers.workExperience) >= experience(vacancy.workExperience));\n      })\n      return result;\n    }\n\n    const stringCompare = (string1, string2) => {\n      let matches = 0;\n      for (let i = 0; i < string1.length; i++) {\n        for (let j = 0; j < string2.length; j++) {\n          if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n            matches++;\n          }\n        }\n      }\n      if (string1.length > 0) {\n        return matches/string1.length;\n      } else {\n        return 1;\n      }\n    }\n\n    const checkMatching = (seeker, attribute) => {\n      const required = vacancy[attribute].split(' ');\n      if (attribute === 'complementarySkills') {\n        attribute = 'skills';\n      }\n      const candidate = seeker[attribute].split(' ');\n      return (stringCompare(required, candidate));\n    }\n\n    const skillsFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        let matching = 0;\n        matching += checkMatching(seeker, 'skills') * 3;\n        matching += checkMatching(seeker, 'complementarySkills');\n        return matching > 1;\n      });\n      return result;\n    }\n\n  const addVacancy = async () => {\n    if (vacancy.jobTitle.length > 2) {\n      if (vacancy.email.includes('@', 1) && vacancy.email.includes('.', 3)) {\n        let body = vacancy;\n        const dateAdded = new Date().toLocaleString();\n        body.dateAdded = dateAdded;\n\n        const result = await fetch('/api/vacancies/add-new', {\n          method: 'post',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n        const response = await result.json();\n\n        if (response.message === 'This job name is already taken') {\n          setError('nameTaken');\n        } else {\n\n          const result = await fetch('/api/seekers/get-all-searching', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n          let seekers = await result.json();\n          seekers = typeFilter(seekers);\n          seekers = salaryFilter(seekers);\n          seekers = educationFilter(seekers);\n          seekers = workExperienceFilter(seekers);\n          seekers = skillsFilter(seekers);\n\n          if (seekers.length) {\n            const search = await fetch('/api/vacancies/search',\n            {\n              method: 'post',\n              body: JSON.stringify({ jobTitle: vacancy.jobTitle, seekers: seekers }),\n              headers: {\n                'Content-Type': 'application/json',\n              }\n            });\n          }\n          setNavigate(true);\n        }\n      } else {\n        setError('invalidEmail');\n      }\n    } else {\n      setError('invalidTitle');\n    }\n  }\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    } else {\n      setSalaryDescription('£ per year');\n    }\n  }, [vacancy.jobType]);\n\n\n  const handleChange = (event) => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  }\n\n  if (navigate) {\n    return <Redirect to=\"/\" />;\n  }\n\n\n\n  return (\n    <>\n    <div className=\"loginbox\">\n      <h1>Add new Vacancy</h1>\n        <div>\n          <label>Job Title:</label>\n          <input type=\"text\" name=\"jobTitle\" value={vacancy.jobTitle} onChange={handleChange} />\n          {(error === 'nameTaken') && <p>This job title is already taken. Please choose another one</p>}\n          {(error === 'invalidTitle') && <p>Please select a valid Job Title</p>}\n        </div>\n        <div>\n          <label>Company Name:</label>\n          <input type=\"text\" name=\"companyName\" value={vacancy.companyName} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input type=\"text\" name=\"email\" value={vacancy.email} onChange={handleChange} />\n          {(error === 'invalidEmail') && <p>Please enter a valid e-mail</p>}\n        </div>\n        <div>\n          <label>Employment Type:</label>\n          <select name=\"jobType\" value={vacancy.jobType} onChange={handleChange}>\n            <option value=\"Permanent\">Permanent</option>\n            <option value=\"Contract\">Contract</option>\n          </select>\n        </div>\n        <div>\n          <label>Minimum Salary ({salaryDesciption}):</label>\n          <input type=\"number\" name=\"minimumSalary\" value={vacancy.minimumSalary} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Maximum Salary ({salaryDesciption}):</label>\n          <input type=\"number\" name=\"maximumSalary\" value={vacancy.maximumSalary} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Location:</label>\n          <input type=\"text\" name=\"location\" value={vacancy.location} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Description:</label>\n          <textarea rows=\"6\" cols=\"50\" name=\"description\" value={vacancy.description} onChange={handleChange} />\n        </div>\n        <div>\n          <label>Education Required:</label>\n          <select name=\"education\" value={vacancy.education} onChange={handleChange}>\n            <option value=\"None\">None</option>\n            <option value=\"High School Diploma\">High School Diploma</option>\n            <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\n            <option value=\"Master's Degree\">Master's Degree</option>\n            <option value=\"Doctoral Degree\">Doctoral Degree</option>\n          </select>\n        </div>\n        <div>\n          <label>Work Experience Required:</label>\n          <select name=\"workExperience\" value={vacancy.workExperience} onChange={handleChange}>\n            <option value=\"None\">None</option>\n            <option value=\"Less than 1 year\">Less than 1 year</option>\n            <option value=\"1 to 2 years\">1 to 2 years</option>\n            <option value=\"2 to 3 years\">2 to 3 years</option>\n            <option value=\"3 to 4 years\">3 to 4 years</option>\n            <option value=\"4 to 5 years\">4 to 5 years</option>\n            <option value=\"Over 5 years\">Over 5 years</option>\n          </select>\n        </div>\n        <div>\n          <label>Skills Required:</label>\n          <textarea rows=\"4\" cols=\"50\" name=\"skills\" value={vacancy.skills} placeholder=\"Use keywords separated by commas\" onChange={handleChange} />\n        </div>\n        <div>\n          <label>Complementary Skills:</label>\n          <textarea rows=\"4\" cols=\"50\" name=\"complementarySkills\" placeholder=\"Use keywords separated by commas\" value={vacancy.complementarySkills} onChange={handleChange} />\n        </div>\n        <button onClick={addVacancy}>Add new vacancy</button>\n      </div>\n    </>\n  );\n}\n\nexport default NewVacancyPage;\n"]},"metadata":{},"sourceType":"module"}