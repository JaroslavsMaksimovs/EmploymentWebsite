{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst JobSearchList = () => {\n  const _useState = useState({\n    jobs: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobs = _useState2[0],\n        setJobs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        typeFilter = _useState4[0],\n        setTypeFilter = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        salaryFilter = _useState6[0],\n        setSalaryFilter = _useState6[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles', {\n        method: 'post'\n      });\n      const body = await result.json();\n      const filteredJobs = {\n        jobs: body.jobs.filter(element => {\n          if (typeFilter === [\"P\"]) {\n            return true;\n          }\n        })\n      };\n      setJobs(filteredJobs);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, box => {\n      typeFilter.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, box => {\n      typeFilter.push(box.value);\n    });\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Various IT jobs \"), React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Job Types: \"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"P\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"Permanent \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"C\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \"Contract \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" Salary: \"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"1\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \"300\\xA3 - 400\\xA3 per day \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"2\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \"400\\xA3 - 500\\xA3 per day \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"3\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \"500\\xA3 - 600\\xA3 per day \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"4\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \"600\\xA3 - 700\\xA3 per day \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"5\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), \"Under 35000\\xA3 per day \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"6\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \"35000\\xA3 - 50000\\xA3 monthly \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"7\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"50000\\xA3 - 75000\\xA3 monthly \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"8\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"75000\\xA3 - 100000\\xA3 monthly \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"9\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), \"100000\\xA3 - 150000\\xA3 monthly \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: \"10\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"Over 150000\\xA3 monthly \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, jobsArray.map((job, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/vacancies/\".concat(job.jobTitle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \", job.jobTitle, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, job.companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, job.type), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, job.minimumSalary, \"\\xA3 - \", job.maximumSalary, \"\\xA3\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, job.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, job.essentialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, job.beneficialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, job.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, job.dateAdded), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))))));\n};\n\nexport default JobSearchList;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js"],"names":["React","useState","useEffect","Link","JobSearchList","jobs","setJobs","typeFilter","setTypeFilter","salaryFilter","setSalaryFilter","fetchData","result","fetch","method","body","json","filteredJobs","filter","element","updateTypeFilter","array","typeBoxes","document","querySelectorAll","Array","prototype","forEach","call","box","push","value","updateSalaryFilter","salaryBoxes","jobsArray","map","job","key","jobTitle","companyName","type","minimumSalary","maximumSalary","location","essentialRequirements","beneficialRequirements","description","dateAdded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst JobSearchList = () => {\n  const [jobs, setJobs] = useState({jobs: []});\n  const [typeFilter, setTypeFilter] = useState([]);\n  const [salaryFilter, setSalaryFilter] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles',\n      {\n        method: 'post'\n      });\n      const body = await result.json();\n      const filteredJobs = {jobs: body.jobs.filter((element) => {\n        if (typeFilter === [\"P\"]) {\n          return true;\n        }\n      })};\n\n\n      setJobs(filteredJobs);\n    }\n    fetchData();\n  }, []);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, (box) => {\n      typeFilter.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, (box) => {\n      typeFilter.push(box.value);\n    })\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n\n\n\n  return(\n  <>\n    <h1> Various IT jobs </h1>\n\n    <div className=\"filter\">\n      <p> Job Types: </p>\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"P\" onClick={() => updateTypeFilter()} />Permanent <br />\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"C\" onClick={() => updateTypeFilter()} />Contract <br />\n\n      <p> Salary: </p>\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"1\" onClick={() => updateSalaryFilter()} />300£ - 400£ per day <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"2\" onClick={() => updateSalaryFilter()} />400£ - 500£ per day <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"3\" onClick={() => updateSalaryFilter()} />500£ - 600£ per day <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"4\" onClick={() => updateSalaryFilter()} />600£ - 700£ per day <br /><br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"5\" onClick={() => updateSalaryFilter()} />Under 35000£ per day <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"6\" onClick={() => updateSalaryFilter()} />35000£ - 50000£ monthly <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"7\" onClick={() => updateSalaryFilter()} />50000£ - 75000£ monthly <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"8\" onClick={() => updateSalaryFilter()} />75000£ - 100000£ monthly <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"9\" onClick={() => updateSalaryFilter()} />100000£ - 150000£ monthly <br />\n      <input type=\"checkbox\" name=\"salaryFilter\" value=\"10\" onClick={() => updateSalaryFilter()} />Over 150000£ monthly <br />\n    </div>\n\n\n\n\n    <div>\n      <ul>\n        {jobsArray.map((job, key) => (\n          <li key={key}>\n            <Link to={`/vacancies/${job.jobTitle}`}> {job.jobTitle} </Link>\n            <p>{job.companyName}</p>\n            <p>{job.type}</p>\n            <p>{job.minimumSalary}£ - {job.maximumSalary}£</p>\n            <p>{job.location}</p>\n            <p>{job.essentialRequirements}</p>\n            <p>{job.beneficialRequirements}</p>\n            <p>{job.description}</p>\n            <p>{job.dateAdded}</p>\n            <br></br>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </>\n)};\n\n\nexport default JobSearchList;\n"]},"metadata":{},"sourceType":"module"}