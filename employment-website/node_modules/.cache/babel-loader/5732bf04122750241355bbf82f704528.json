{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js\";\nimport React, { useState } from 'react';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({\n    jobTitle: '',\n    companyName: '',\n    email: '',\n    jobType: 'permanent',\n    minimumSalary: '',\n    maximumSalary: '',\n    location: '',\n    essentialRequirements: '',\n    beneficialRequirements: '',\n    description: ''\n  });\n\n  const addVacancy = async () => {\n    var body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n    const result = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(result);\n  };\n\n  const handleChange = event => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add new Vacancy\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Job Title:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"jobTitle\",\n    value: vacancy.jobTitle,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Company Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"companyName\",\n    value: vacancy.companyName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Email:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: vacancy.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Employment Type:\", React.createElement(\"select\", {\n    name: \"jobType\",\n    value: vacancy.jobType,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Permanent\"), React.createElement(\"option\", {\n    value: \"contract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Contract\"))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Minimum Salary:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"minimumSalary\",\n    value: vacancy.minimumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Maximum Salary:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"maximumSalary\",\n    value: vacancy.maximumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: vacancy.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Essential Requirements\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"essentialRequirements\",\n    value: vacancy.essentialRequirements,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Beneficial Requirements:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"beneficialRequirements\",\n    value: vacancy.beneficialRequirements,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Description:\", React.createElement(\"textarea\", {\n    rows: \"6\",\n    cols: \"50\",\n    name: \"description\",\n    value: vacancy.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => addVacancy(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Add new vacancy\")));\n};\n\nexport default NewVacancyPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js"],"names":["React","useState","NewVacancyPage","vacancy","setVacancy","jobTitle","companyName","email","jobType","minimumSalary","maximumSalary","location","essentialRequirements","beneficialRequirements","description","addVacancy","body","dateAdded","Date","toLocaleString","result","fetch","method","JSON","stringify","headers","console","log","handleChange","event","vacancyCopy","parse","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({ jobTitle: '', companyName: '', email: '', jobType: 'permanent', minimumSalary: '',\n  maximumSalary: '', location: '', essentialRequirements: '', beneficialRequirements: '', description: '' });\n\n  const addVacancy = async () => {\n    var body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n\n    const result = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    console.log(result);\n  }\n\n  const handleChange = (event) => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  }\n\n\n\n  return (\n    <>\n      <div>\n        <h1>Add new Vacancy</h1>\n        <label>\n          Job Title:\n          <input type=\"text\" name=\"jobTitle\" value={vacancy.jobTitle} onChange={handleChange} />\n        </label>\n        <label>\n          Company Name:\n          <input type=\"text\" name=\"companyName\" value={vacancy.companyName} onChange={handleChange} />\n        </label>\n        <label>\n          Email:\n          <input type=\"text\" name=\"email\" value={vacancy.email} onChange={handleChange} />\n        </label>\n        <label>\n          Employment Type:\n          <select name=\"jobType\" value={vacancy.jobType} onChange={handleChange}>\n          <option value=\"permanent\">Permanent</option>\n          <option value=\"contract\">Contract</option>\n          </select>\n\n        </label>\n        <label>\n          Minimum Salary:\n          <input type=\"text\" name=\"minimumSalary\" value={vacancy.minimumSalary} onChange={handleChange} />\n        </label>\n        <label>\n          Maximum Salary:\n          <input type=\"text\" name=\"maximumSalary\" value={vacancy.maximumSalary} onChange={handleChange} />\n        </label>\n        <label>\n          Location:\n          <input type=\"text\" name=\"location\" value={vacancy.location} onChange={handleChange} />\n        </label>\n        <label>\n          Essential Requirements\n          <textarea rows=\"4\" cols=\"50\" name=\"essentialRequirements\" value={vacancy.essentialRequirements} onChange={handleChange} />\n        </label>\n        <label>\n          Beneficial Requirements:\n          <textarea rows=\"4\" cols=\"50\" name=\"beneficialRequirements\" value={vacancy.beneficialRequirements} onChange={handleChange} />\n        </label>\n        <label>\n          Description:\n          <textarea rows=\"6\" cols=\"50\" name=\"description\" value={vacancy.description} onChange={handleChange} />\n        </label>\n        <button onClick={() => addVacancy()}>Add new vacancy</button>\n      </div>\n    </>\n  );\n}\n\nexport default NewVacancyPage;\n"]},"metadata":{},"sourceType":"module"}