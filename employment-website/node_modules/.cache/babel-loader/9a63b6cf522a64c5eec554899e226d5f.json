{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({\n    jobTitle: '',\n    companyName: '',\n    email: '',\n    jobType: 'Permanent',\n    minimumSalary: '',\n    maximumSalary: '',\n    location: '',\n    description: '',\n    education: '',\n    workExperience: '',\n    skills: ''\n  });\n  const [navigate, setNavigate] = useState(false);\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n\n  const addVacancy = async () => {\n    var body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n    const result = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setNavigate(true);\n  };\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Permanent') {\n      setSalaryDescription('£ per year');\n    } else if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    }\n  }, [vacancy.jobType]);\n\n  const handleChange = event => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  };\n\n  if (navigate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Add new Vacancy\"), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Job Title:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"jobTitle\",\n    value: vacancy.jobTitle,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Company Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"companyName\",\n    value: vacancy.companyName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Email:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: vacancy.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Employment Type:\", React.createElement(\"select\", {\n    name: \"jobType\",\n    value: vacancy.jobType,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Permanent\"), React.createElement(\"option\", {\n    value: \"Contract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Contract\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Minimum Salary (\", salaryDesciption, \"):\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"minimumSalary\",\n    value: vacancy.minimumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Maximum Salary (\", salaryDesciption, \"):\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"maximumSalary\",\n    value: vacancy.maximumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: vacancy.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Description:\", React.createElement(\"textarea\", {\n    rows: \"6\",\n    cols: \"50\",\n    name: \"description\",\n    value: vacancy.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Education Required:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"education\",\n    value: vacancy.education,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Work Experience Required:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"workExperience\",\n    value: vacancy.workExperience,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Skills Required:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"skills\",\n    value: vacancy.skills,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    onClick: () => addVacancy(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Add new vacancy\"));\n};\n\nexport default NewVacancyPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js"],"names":["React","useState","useEffect","Redirect","NewVacancyPage","vacancy","setVacancy","jobTitle","companyName","email","jobType","minimumSalary","maximumSalary","location","description","education","workExperience","skills","navigate","setNavigate","salaryDesciption","setSalaryDescription","addVacancy","body","dateAdded","Date","toLocaleString","result","fetch","method","JSON","stringify","headers","handleChange","event","vacancyCopy","parse","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC;AAAEM,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,WAAW,EAAE,EAA7B;AAAiCC,IAAAA,KAAK,EAAE,EAAxC;AAA4CC,IAAAA,OAAO,EAAE,WAArD;AAAkEC,IAAAA,aAAa,EAAE,EAAjF;AACvCC,IAAAA,aAAa,EAAE,EADwB;AACpBC,IAAAA,QAAQ,EAAE,EADU;AACNC,IAAAA,WAAW,EAAE,EADP;AACWC,IAAAA,SAAS,EAAE,EADtB;AAC0BC,IAAAA,cAAc,EAAE,EAD1C;AAC8CC,IAAAA,MAAM,EAAE;AADtD,GAAD,CAAtC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,gBAAD,EAAmBC,oBAAnB,IAA2CpB,QAAQ,CAAC,YAAD,CAAzD;;AAEA,QAAMqB,UAAU,GAAG,YAAY;AAC7B,QAAIC,IAAI,GAAGlB,OAAX;AACA,UAAMmB,SAAS,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAlB;AACAH,IAAAA,IAAI,CAACC,SAAL,GAAiBA,SAAjB;AAEA,UAAMG,MAAM,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AACnDC,MAAAA,MAAM,EAAE,MAD2C;AAEnDN,MAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAF6C;AAGnDS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH0C,KAA3B,CAA1B;AAOAb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAbD;;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,OAAO,CAACK,OAAR,KAAoB,WAAxB,EAAqC;AACnCW,MAAAA,oBAAoB,CAAC,YAAD,CAApB;AACD,KAFD,MAEO,IAAIhB,OAAO,CAACK,OAAR,KAAoB,UAAxB,EAAoC;AACzCW,MAAAA,oBAAoB,CAAC,WAAD,CAApB;AACD;AACF,GANQ,EAMN,CAAChB,OAAO,CAACK,OAAT,CANM,CAAT;;AASA,QAAMuB,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAe1B,OAAf,CAAX,CAApB;AACA8B,IAAAA,WAAW,CAACD,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAX,GAAiCJ,KAAK,CAACG,MAAN,CAAaE,KAA9C;AACAjC,IAAAA,UAAU,CAAC6B,WAAD,CAAV;AACD,GAJD;;AAMA,MAAIjB,QAAJ,EAAc;AACZ,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAID,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEb,OAAO,CAACE,QAAlD;AAA4D,IAAA,QAAQ,EAAE0B,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,aAAxB;AAAsC,IAAA,KAAK,EAAE5B,OAAO,CAACG,WAArD;AAAkE,IAAA,QAAQ,EAAEyB,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE5B,OAAO,CAACI,KAA/C;AAAsD,IAAA,QAAQ,EAAEwB,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAbF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE5B,OAAO,CAACK,OAAtC;AAA+C,IAAA,QAAQ,EAAEuB,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CADF,CAnBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBb,gBADnB,QAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,eAA1B;AAA0C,IAAA,KAAK,EAAEf,OAAO,CAACM,aAAzD;AAAwE,IAAA,QAAQ,EAAEsB,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CA5BF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBb,gBADnB,QAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,eAA1B;AAA0C,IAAA,KAAK,EAAEf,OAAO,CAACO,aAAzD;AAAwE,IAAA,QAAQ,EAAEqB,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAlCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAE5B,OAAO,CAACQ,QAAlD;AAA4D,IAAA,QAAQ,EAAEoB,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAxCF,EA8CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,IAAI,EAAC,aAAlC;AAAgD,IAAA,KAAK,EAAE5B,OAAO,CAACS,WAA/D;AAA4E,IAAA,QAAQ,EAAEmB,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CA9CF,EAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,IAAI,EAAC,WAAlC;AAA8C,IAAA,KAAK,EAAE5B,OAAO,CAACU,SAA7D;AAAwE,IAAA,QAAQ,EAAEkB,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CApDF,EA0DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,IAAI,EAAC,gBAAlC;AAAmD,IAAA,KAAK,EAAE5B,OAAO,CAACW,cAAlE;AAAkF,IAAA,QAAQ,EAAEiB,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CA1DF,EAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAA2C,IAAA,KAAK,EAAE5B,OAAO,CAACY,MAA1D;AAAkE,IAAA,QAAQ,EAAEgB,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAhEF,CAFF,EAyEE;AAAQ,IAAA,OAAO,EAAE,MAAMX,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzEF,CADF;AA6ED,CAvHD;;AAyHA,eAAelB,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({ jobTitle: '', companyName: '', email: '', jobType: 'Permanent', minimumSalary: '',\n  maximumSalary: '', location: '', description: '', education: '', workExperience: '', skills: '' });\n  const [navigate, setNavigate] = useState(false);\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n\n  const addVacancy = async () => {\n    var body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n\n    const result = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    setNavigate(true);\n  }\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Permanent') {\n      setSalaryDescription('£ per year');\n    } else if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    }\n  }, [vacancy.jobType]);\n\n\n  const handleChange = (event) => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  }\n\n  if (navigate) {\n    return <Redirect to=\"/\" />;\n  }\n\n\n\n  return (\n    <>\n      <h1>Add new Vacancy</h1>\n      <div className=\"form\">\n        <div>\n          <label>\n            Job Title:\n            <input type=\"text\" name=\"jobTitle\" value={vacancy.jobTitle} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Company Name:\n            <input type=\"text\" name=\"companyName\" value={vacancy.companyName} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Email:\n            <input type=\"text\" name=\"email\" value={vacancy.email} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Employment Type:\n            <select name=\"jobType\" value={vacancy.jobType} onChange={handleChange}>\n              <option value=\"Permanent\">Permanent</option>\n              <option value=\"Contract\">Contract</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Minimum Salary ({salaryDesciption}):\n            <input type=\"number\" name=\"minimumSalary\" value={vacancy.minimumSalary} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Maximum Salary ({salaryDesciption}):\n            <input type=\"number\" name=\"maximumSalary\" value={vacancy.maximumSalary} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Location:\n            <input type=\"text\" name=\"location\" value={vacancy.location} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Description:\n            <textarea rows=\"6\" cols=\"50\" name=\"description\" value={vacancy.description} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Education Required:\n            <textarea rows=\"4\" cols=\"50\" name=\"education\" value={vacancy.education} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Work Experience Required:\n            <textarea rows=\"4\" cols=\"50\" name=\"workExperience\" value={vacancy.workExperience} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Skills Required:\n            <textarea rows=\"4\" cols=\"50\" name=\"skills\" value={vacancy.skills} onChange={handleChange} />\n          </label>\n        </div>\n      </div>\n      <button onClick={() => addVacancy()}>Add new vacancy</button>\n    </>\n  );\n}\n\nexport default NewVacancyPage;\n"]},"metadata":{},"sourceType":"module"}