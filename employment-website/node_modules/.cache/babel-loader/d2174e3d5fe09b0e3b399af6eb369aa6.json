{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js\";\nimport React from 'react';\n\nconst JobFindingButton = ({\n  user\n}) => {\n  const findJob = async () => {\n    const typeFilter = jobs => {\n      if (user.jobType === \"Both\") {\n        return jobs;\n      } else {\n        const result = jobs.filter(job => {\n          return user.jobType === job.jobType;\n        });\n        return result;\n      }\n    };\n\n    const salaryFilter = jobs => {\n      const result = jobs.filter(job => {\n        return user.salary <= job.maximumSalary;\n      });\n      return result;\n    };\n\n    const stringCompare = (string1, string2) => {\n      let matches = 0;\n\n      for (let i = 0; i < string1.length; i++) {\n        for (let j = 0; j < string2.length; j++) {\n          if (string1[i].toLowerCase() === string2[j].toLowerCase()) {\n            matches++;\n          }\n        }\n      }\n\n      return matches / string1.length;\n    };\n\n    const checkMatching = (job, attribute) => {\n      const required = job[attribute].split(' ');\n      const candidate = user[attribute].split(' ');\n      console.log(required, candidate);\n      console.log(stringCompare(required, candidate));\n      return stringCompare(required, candidate) > 0.1;\n    };\n\n    const essentialFilter = jobs => {\n      const result = jobs.filter(job => {\n        let matching = 0;\n\n        if (checkMatching(job, 'education')) {\n          matching++;\n        }\n\n        if (checkMatching(job, 'workExperience')) {\n          matching++;\n        }\n\n        if (checkMatching(job, 'skills')) {\n          matching++;\n        }\n\n        return matching > 1;\n      });\n      return result;\n    };\n\n    const result = await fetch('/api/vacancies/getAllTitles', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let jobs = await result.json();\n    jobs = typeFilter(jobs);\n    jobs = salaryFilter(jobs);\n    jobs = essentialFilter(jobs);\n    console.log(jobs);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: findJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Find Job \"));\n};\n\nexport default JobFindingButton;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js"],"names":["React","JobFindingButton","user","findJob","typeFilter","jobs","jobType","result","filter","job","salaryFilter","salary","maximumSalary","stringCompare","string1","string2","matches","i","length","j","toLowerCase","checkMatching","attribute","required","split","candidate","console","log","essentialFilter","matching","fetch","method","headers","json"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst JobFindingButton = ({ user }) => {\n\n  const findJob = async () => {\n\n    const typeFilter = (jobs) => {\n      if (user.jobType === \"Both\") {\n        return jobs;\n      } else {\n        const result = jobs.filter((job) => {\n          return (user.jobType === job.jobType);\n        });\n        return result;\n      }\n    }\n\n    const salaryFilter = (jobs) => {\n      const result = jobs.filter((job) => {\n        return (user.salary <= job.maximumSalary);\n      });\n      return result;\n    }\n\n    const stringCompare = (string1, string2) => {\n      let matches = 0;\n      for (let i = 0; i < string1.length; i++) {\n        for (let j = 0; j < string2.length; j++) {\n          if (string1[i].toLowerCase() === string2[j].toLowerCase()) {\n            matches++;\n          }\n        }\n      }\n      return matches/string1.length;\n    }\n\n    const checkMatching = (job, attribute) => {\n      const required = job[attribute].split(' ');\n      const candidate = user[attribute].split(' ');\n      console.log(required, candidate);\n      console.log(stringCompare(required, candidate));\n      return (stringCompare(required, candidate) > 0.1);\n    }\n\n    const essentialFilter = (jobs) => {\n      const result = jobs.filter((job) => {\n        let matching = 0;\n        if (checkMatching(job, 'education')) {\n          matching++;\n        }\n        if (checkMatching(job, 'workExperience')) {\n          matching++;\n        }\n        if (checkMatching(job, 'skills')) {\n          matching++;\n        }\n        return matching > 1;\n      });\n      return result;\n    }\n\n\n\n    const result = await fetch('/api/vacancies/getAllTitles',\n    {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    let jobs = await result.json();\n    jobs = typeFilter(jobs);\n    jobs = salaryFilter(jobs);\n    jobs = essentialFilter(jobs);\n    console.log(jobs);\n  };\n\n\n  return (\n    <>\n      <button onClick={findJob}>Find Job </button>\n    </>\n  )\n\n\n\n\n}\n\nexport default JobFindingButton;\n"]},"metadata":{},"sourceType":"module"}