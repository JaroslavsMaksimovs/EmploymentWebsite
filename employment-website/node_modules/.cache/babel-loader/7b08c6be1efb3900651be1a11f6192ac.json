{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ApplyButton from '../components/ApplyButton';\n\nconst JobPage = ({\n  match,\n  user\n}) => {\n  const name = match.params.name;\n  const [jobInfo, setJobInfo] = useState({\n    jobTitle: ''\n  });\n  const [navigate, setNavigate] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/vacancies/${name}`);\n      const body = await result.json();\n\n      if (body === null) {\n        setNavigate(true);\n      } else {\n        setJobInfo(body);\n        console.log(body);\n      }\n    };\n\n    fetchData();\n  }, [name]);\n\n  if (navigate) {\n    return React.createElement(Redirect, {\n      to: \"/404\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, jobInfo.jobTitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Company Name: \", jobInfo.companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Salary: \", jobInfo.minimumSalary, \"\\xA3 - \", jobInfo.maximumSalary, \"\\xA3\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Location: \", jobInfo.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Job Description: \", jobInfo.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Required Education: \", job.education), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Required Work Experience: \", job.workExperience), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Required skills: \", job.skills), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Date Added: \", jobInfo.dateAdded), React.createElement(ApplyButton, {\n    jobTitle: name,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default JobPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobPage.js"],"names":["React","useState","useEffect","Redirect","ApplyButton","JobPage","match","user","name","params","jobInfo","setJobInfo","jobTitle","navigate","setNavigate","fetchData","result","fetch","body","json","console","log","companyName","minimumSalary","maximumSalary","location","description","job","education","workExperience","skills","dateAdded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACnC,QAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AAAEW,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,kBAAiBT,IAAK,EAAxB,CAA1B;AACA,YAAMU,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;;AACA,UAAID,IAAI,KAAK,IAAb,EAAmB;AACjBJ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLH,QAAAA,UAAU,CAACO,IAAD,CAAV;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AACF,KATD;;AAUAH,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACP,IAAD,CAZM,CAAT;;AAcA,MAAIK,QAAJ,EAAc;AACZ,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAKD,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACE,QAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBF,OAAO,CAACY,WAA1B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYZ,OAAO,CAACa,aAApB,aAAuCb,OAAO,CAACc,aAA/C,SAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcd,OAAO,CAACe,QAAtB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBf,OAAO,CAACgB,WAA7B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBC,GAAG,CAACC,SAA5B,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8BD,GAAG,CAACE,cAAlC,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBF,GAAG,CAACG,MAAzB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBpB,OAAO,CAACqB,SAAxB,CATF,EAUE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEvB,IAAvB;AAA6B,IAAA,IAAI,EAAED,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAzCD;;AA2CA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ApplyButton from '../components/ApplyButton'\n\nconst JobPage = ({ match, user }) => {\n  const name = match.params.name;\n\n  const [jobInfo, setJobInfo] = useState({ jobTitle: '' });\n  const [navigate, setNavigate] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/vacancies/${name}`);\n      const body = await result.json()\n      if (body === null) {\n        setNavigate(true);\n      } else {\n        setJobInfo(body);\n        console.log(body);\n      }\n    }\n    fetchData();\n  }, [name]);\n\n  if (navigate) {\n    return <Redirect to=\"/404\" />\n  }\n\n\n\n\n  return(\n    <>\n      <h1>{jobInfo.jobTitle}</h1>\n      <p>Company Name: {jobInfo.companyName}</p>\n      <p>Salary: {jobInfo.minimumSalary}£ - {jobInfo.maximumSalary}£</p>\n      <p>Location: {jobInfo.location}</p>\n      <p>Job Description: {jobInfo.description}</p>\n      <p>Required Education: {job.education}</p>\n      <p>Required Work Experience: {job.workExperience}</p>\n      <p>Required skills: {job.skills}</p>\n      <p>Date Added: {jobInfo.dateAdded}</p>\n      <ApplyButton jobTitle={name} user={user} />\n    </>\n  );\n};\n\nexport default JobPage;\n"]},"metadata":{},"sourceType":"module"}