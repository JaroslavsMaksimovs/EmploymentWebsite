{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/VariableNavButtons.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport AccountDropDownMenu from './AccountDropDownMenu';\nimport LoginRegisterComponent from './LoginRegisterComponent';\n\nconst VariableNavButtons = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const logOut = () => {\n    sessionStorage.removeItem('state');\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    const fetchData = () => {\n      const result = sessionStorage.getItem('state');\n      result === null ? setLoggedIn(false) : setLoggedIn(true);\n    };\n\n    fetchData();\n  });\n\n  if (loggedIn === false) {\n    return React.createElement(LoginRegisterComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(AccountDropDownMenu, {\n      logOut: logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n};\n\nexport default VariableNavButtons;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/VariableNavButtons.js"],"names":["React","useState","useEffect","useReducer","AccountDropDownMenu","LoginRegisterComponent","VariableNavButtons","loggedIn","setLoggedIn","ignored","forceUpdate","x","logOut","sessionStorage","removeItem","fetchData","result","getItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACQ,OAAD,EAAUC,WAAV,IAAyBP,UAAU,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAzC;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACnBC,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAJ,IAAAA,WAAW;AACZ,GAHD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAI,MAAM;AACvB,YAAMC,MAAM,GAAGH,cAAc,CAACI,OAAf,CAAuB,OAAvB,CAAf;AACCD,MAAAA,MAAM,KAAK,IAAZ,GAAoBR,WAAW,CAAC,KAAD,CAA/B,GAAyCA,WAAW,CAAC,IAAD,CAApD;AACD,KAHD;;AAIAO,IAAAA,SAAS;AACV,GANQ,CAAT;;AAQA,MAAIR,QAAQ,KAAK,KAAjB,EAAwB;AACtB,WAAO,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WAAO,oBAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAEF,CA1BD;;AA4BA,eAAeN,kBAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport AccountDropDownMenu from './AccountDropDownMenu';\nimport LoginRegisterComponent from './LoginRegisterComponent';\n\n\n\nconst VariableNavButtons = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n\n\n  const logOut = () => {\n    sessionStorage.removeItem('state');\n    forceUpdate();\n  }\n\n\n  useEffect(() => {\n    const fetchData =  () => {\n      const result = sessionStorage.getItem('state');\n      (result === null) ? setLoggedIn(false) : setLoggedIn(true)\n    }\n    fetchData();\n  });\n\n  if (loggedIn === false) {\n    return(<LoginRegisterComponent />);\n  } else {\n    return(<AccountDropDownMenu logOut={logOut} />);\n  }\n\n};\n\nexport default VariableNavButtons;\n"]},"metadata":{},"sourceType":"module"}