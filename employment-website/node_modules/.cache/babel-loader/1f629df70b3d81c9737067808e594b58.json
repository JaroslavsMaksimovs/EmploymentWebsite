{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js\";\nimport React from 'react';\n\nconst JobFindingButton = ({\n  user\n}) => {\n  const findJob = async () => {\n    const typeFilter = jobs => {\n      if (user.jobType === \"Both\") {\n        return jobs;\n      } else {\n        const result = jobs.filter(job => {\n          return user.jobType === job.jobType;\n        });\n        return result;\n      }\n    };\n\n    const salaryFilter = jobs => {\n      const result = jobs.filter(job => {\n        return user.salary <= job.maximumSalary;\n      });\n      return result;\n    };\n\n    const essentialFilter = jobs => {\n      const result = jobs.filter(job => {\n        const requirementsWords = job.essentialRequirements.split(' ');\n        return true;\n      });\n    };\n\n    const result = await fetch('/api/vacancies/getAllTitles', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let jobs = await result.json();\n    jobs = typeFilter(jobs);\n    jobs = salaryFilter(jobs);\n    jobs = essentialFilter(jobs);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: findJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Find Job \"));\n};\n\nexport default JobFindingButton;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/components/JobFindingButton.js"],"names":["React","JobFindingButton","user","findJob","typeFilter","jobs","jobType","result","filter","job","salaryFilter","salary","maximumSalary","essentialFilter","requirementsWords","essentialRequirements","split","fetch","method","headers","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAErC,QAAMC,OAAO,GAAG,YAAY;AAE1B,UAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,UAAIH,IAAI,CAACI,OAAL,KAAiB,MAArB,EAA6B;AAC3B,eAAOD,IAAP;AACD,OAFD,MAEO;AACL,cAAME,MAAM,GAAGF,IAAI,CAACG,MAAL,CAAaC,GAAD,IAAS;AAClC,iBAAQP,IAAI,CAACI,OAAL,KAAiBG,GAAG,CAACH,OAA7B;AACD,SAFc,CAAf;AAGA,eAAOC,MAAP;AACD;AACF,KATD;;AAWA,UAAMG,YAAY,GAAIL,IAAD,IAAU;AAC7B,YAAME,MAAM,GAAGF,IAAI,CAACG,MAAL,CAAaC,GAAD,IAAS;AAClC,eAAQP,IAAI,CAACS,MAAL,IAAeF,GAAG,CAACG,aAA3B;AACD,OAFc,CAAf;AAGA,aAAOL,MAAP;AACD,KALD;;AAOA,UAAMM,eAAe,GAAIR,IAAD,IAAU;AAChC,YAAME,MAAM,GAAGF,IAAI,CAACG,MAAL,CAAaC,GAAD,IAAS;AAClC,cAAMK,iBAAiB,GAAGL,GAAG,CAACM,qBAAJ,CAA0BC,KAA1B,CAAgC,GAAhC,CAA1B;AAEA,eAAO,IAAP;AACD,OAJc,CAAf;AAKD,KAND;;AAUA,UAAMT,MAAM,GAAG,MAAMU,KAAK,CAAC,6BAAD,EAC1B;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,KAD0B,CAA1B;AAOA,QAAId,IAAI,GAAG,MAAME,MAAM,CAACa,IAAP,EAAjB;AACAf,IAAAA,IAAI,GAAGD,UAAU,CAACC,IAAD,CAAjB;AACAA,IAAAA,IAAI,GAAGK,YAAY,CAACL,IAAD,CAAnB;AACAA,IAAAA,IAAI,GAAGQ,eAAe,CAACR,IAAD,CAAtB;AACD,GAzCD;;AA4CA,SACE,0CACE;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AASD,CAvDD;;AAyDA,eAAeF,gBAAf","sourcesContent":["import React from 'react';\n\nconst JobFindingButton = ({ user }) => {\n\n  const findJob = async () => {\n\n    const typeFilter = (jobs) => {\n      if (user.jobType === \"Both\") {\n        return jobs;\n      } else {\n        const result = jobs.filter((job) => {\n          return (user.jobType === job.jobType);\n        });\n        return result;\n      }\n    }\n\n    const salaryFilter = (jobs) => {\n      const result = jobs.filter((job) => {\n        return (user.salary <= job.maximumSalary);\n      });\n      return result;\n    }\n\n    const essentialFilter = (jobs) => {\n      const result = jobs.filter((job) => {\n        const requirementsWords = job.essentialRequirements.split(' ');\n        \n        return true;\n      })\n    }\n\n\n\n    const result = await fetch('/api/vacancies/getAllTitles',\n    {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    let jobs = await result.json();\n    jobs = typeFilter(jobs);\n    jobs = salaryFilter(jobs);\n    jobs = essentialFilter(jobs);\n  };\n\n\n  return (\n    <>\n      <button onClick={findJob}>Find Job </button>\n    </>\n  )\n\n\n\n\n}\n\nexport default JobFindingButton;\n"]},"metadata":{},"sourceType":"module"}