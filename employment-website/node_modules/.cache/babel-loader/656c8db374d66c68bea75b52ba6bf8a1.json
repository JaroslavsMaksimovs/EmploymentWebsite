{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from '../components/salary-filter';\n\nconst JobSearchList = () => {\n  const [jobs, setJobs] = useState([]);\n  const [jobsArray, setJobsArray] = useState([]);\n  const [typeFilter, setTypeFilter] = useState([]);\n  const [salaryFilter, setSalaryFilter] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const jobsPerPage = 5;\n\n  const typeFilterize = unfilteredJobs => {\n    const filteredJobs = unfilteredJobs.filter(element => {\n      if (typeFilter.length === 0) {\n        return true;\n      } else if (typeFilter.length === 2) {\n        return true;\n      } else if (typeFilter.includes(\"P\")) {\n        return element.jobType === 'Permanent';\n      } else if (typeFilter.includes(\"C\")) {\n        return element.jobType === 'Contract';\n      }\n    });\n    return filteredJobs;\n  };\n\n  const checkSalaryFilter = job => {\n    var result = false;\n    salaries.forEach(filter => {\n      if (salaryFilter.includes(filter.index)) {\n        if (filter.jobType === job.jobType) {\n          if (!(job.maximumSalary < filter.lowerLimit || job.minimumSalary > filter.upperLimit)) {\n            result = true;\n          }\n        }\n      }\n    });\n    return result;\n  };\n\n  const salaryFilterize = unfilteredJobs => {\n    const filteredJobs = unfilteredJobs.filter(element => {\n      if (salaryFilter.length === 0) {\n        return true;\n      } else if (salaryFilter.length === salaries.length) {\n        return true;\n      } else {\n        return checkSalaryFilter(element);\n      }\n    });\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/get-all-titles', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const body = await result.json();\n      setJobs(body);\n    };\n\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n  useEffect(() => {\n    let vacancies = jobs;\n    vacancies = typeFilterize(vacancies);\n    vacancies = salaryFilterize(vacancies);\n    setJobsArray(salaryFiltered.slice(0, jobsPerPage));\n    setPageNumber(1);\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, box => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, box => {\n      array.push(box.value);\n    });\n    setSalaryFilter(array);\n  };\n\n  const shorten = description => {\n    if (description.length > 80) {\n      return description.slice(0, 80) + '...';\n    } else {\n      return description;\n    }\n  };\n\n  const totalPages = Math.ceil(jobs.length / jobsPerPage);\n  useEffect(() => {\n    setJobsArray(jobs.slice((pageNumber - 1) * jobsPerPage, pageNumber * jobsPerPage));\n  }, [pageNumber]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"job-search-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" Various IT jobs \"), React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \" Job Types: \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"P\",\n    onClick: updateTypeFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), \"Permanent \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"C\",\n    onClick: updateTypeFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \"Contract \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" Salary: \"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, salaries.map((salary, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: salary.index,\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), salary.message, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"job-search-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, jobsArray.map((job, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"job-link\",\n    to: `/vacancies/${job.jobTitle}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \" \", job.jobTitle, \" \"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Company name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, job.companyName)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Employment Type\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, job.jobType)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Salary\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, job.minimumSalary, \"\\xA3 - \", job.maximumSalary, \"\\xA3\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Location\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, job.location)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Job Description\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, shorten(job.description))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Required Education\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, job.education)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Required Work Experience\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, job.workExperience)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Required skills\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, job.skills)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Complementary skills\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, job.complementarySkills)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Date Added\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, job.dateAdded)))))), React.createElement(\"div\", {\n    className: \"page-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, pageNumber > 1 && React.createElement(\"button\", {\n    onClick: () => setPageNumber(pageNumber - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, pageNumber - 1), React.createElement(\"button\", {\n    className: \"current-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, pageNumber), pageNumber < totalPages && React.createElement(\"button\", {\n    onClick: () => setPageNumber(pageNumber + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, pageNumber + 1))));\n};\n\nexport default JobSearchList;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js"],"names":["React","useState","useEffect","Link","salaries","JobSearchList","jobs","setJobs","jobsArray","setJobsArray","typeFilter","setTypeFilter","salaryFilter","setSalaryFilter","pageNumber","setPageNumber","jobsPerPage","typeFilterize","unfilteredJobs","filteredJobs","filter","element","length","includes","jobType","checkSalaryFilter","job","result","forEach","index","maximumSalary","lowerLimit","minimumSalary","upperLimit","salaryFilterize","fetchData","fetch","method","headers","body","json","vacancies","salaryFiltered","slice","updateTypeFilter","array","typeBoxes","document","querySelectorAll","Array","prototype","call","box","push","value","updateSalaryFilter","salaryBoxes","shorten","description","totalPages","Math","ceil","map","salary","key","message","jobTitle","companyName","location","education","workExperience","skills","complementarySkills","dateAdded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from '../components/salary-filter';\n\nconst JobSearchList = () => {\n  const [jobs, setJobs] = useState([]);\n  const [jobsArray, setJobsArray] = useState([]);\n  const [typeFilter, setTypeFilter] = useState([]);\n  const [salaryFilter, setSalaryFilter] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const jobsPerPage = 5;\n\n\n  const typeFilterize = (unfilteredJobs) => {\n    const filteredJobs = unfilteredJobs.filter((element) => {\n      if (typeFilter.length === 0) {\n        return true;\n      } else if (typeFilter.length === 2) {\n        return true;\n      } else if (typeFilter.includes(\"P\")) {\n        return (element.jobType === 'Permanent');\n      } else if (typeFilter.includes(\"C\")) {\n        return (element.jobType === 'Contract');\n      }\n    });\n    return filteredJobs;\n  };\n\n  const checkSalaryFilter = (job) => {\n    var result = false;\n    salaries.forEach((filter) => {\n      if (salaryFilter.includes(filter.index)) {\n        if (filter.jobType === job.jobType) {\n          if (!(job.maximumSalary < filter.lowerLimit || job.minimumSalary > filter.upperLimit)) {\n            result = true;\n          }\n        }\n      }\n    });\n    return result;\n  };\n\n  const salaryFilterize = (unfilteredJobs) => {\n    const filteredJobs = unfilteredJobs.filter((element) => {\n      if (salaryFilter.length === 0) {\n        return true;\n      } else if (salaryFilter.length === salaries.length) {\n        return true;\n      } else {\n        return checkSalaryFilter(element);\n      }\n    });\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/get-all-titles',\n      {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      const body = await result.json();\n\n      setJobs(body);\n    }\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n\n  useEffect(() => {\n    let vacancies = jobs;\n    vacancies = typeFilterize(vacancies);\n    vacancies = salaryFilterize(vacancies);\n    setJobsArray(salaryFiltered.slice(0, jobsPerPage));\n    setPageNumber(1);\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, (box) => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, (box) => {\n      array.push(box.value);\n    })\n    setSalaryFilter(array);\n  };\n\n  const shorten = (description) => {\n    if (description.length > 80) {\n      return description.slice(0, 80) + '...';\n    } else {\n      return description;\n    }\n  }\n\n  const totalPages = (Math.ceil(jobs.length / jobsPerPage));\n\n  useEffect(() => {\n    setJobsArray(jobs.slice((pageNumber - 1) * jobsPerPage, (pageNumber * jobsPerPage)));\n  }, [pageNumber]);\n\n\n\n  return(\n  <>\n    <h1 className=\"job-search-list\"> Various IT jobs </h1>\n\n    <div className=\"filter\">\n      <h3> Job Types: </h3>\n      <label>\n        <input type=\"checkbox\" name=\"typeFilter\" value=\"P\" onClick={updateTypeFilter} />Permanent <br />\n      </label>\n      <label>\n        <input type=\"checkbox\" name=\"typeFilter\" value=\"C\" onClick={updateTypeFilter} />Contract <br />\n      </label>\n      <h3> Salary: </h3>\n      <ul>\n        {\n          salaries.map((salary, key) => (\n            <li key={key}>\n              <label>\n                <input type=\"checkbox\" name=\"salaryFilter\" value={salary.index} onClick={() => updateSalaryFilter()} />{salary.message}<br />\n              </label>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n\n    <div className=\"job-search-list\">\n      <ul>\n        {jobsArray.map((job, key) => (\n          <li key={key}>\n            <Link className=\"job-link\" to={`/vacancies/${job.jobTitle}`}> {job.jobTitle} </Link>\n            <table>\n              <tr>\n                <th>Company name</th>\n                <td>{job.companyName}</td>\n              </tr>\n              <tr>\n                <th>Employment Type</th>\n                <td>{job.jobType}</td>\n              </tr>\n              <tr>\n                <th>Salary</th>\n                <td>{job.minimumSalary}£ - {job.maximumSalary}£</td>\n              </tr>\n              <tr>\n                <th>Location</th>\n                <td>{job.location}</td>\n              </tr>\n              <tr>\n                <th>Job Description</th>\n                <td>{shorten(job.description)}</td>\n              </tr>\n              <tr>\n                <th>Required Education</th>\n                <td>{job.education}</td>\n              </tr>\n              <tr>\n                <th>Required Work Experience</th>\n                <td>{job.workExperience}</td>\n              </tr>\n              <tr>\n                <th>Required skills</th>\n                <td>{job.skills}</td>\n              </tr>\n              <tr>\n                <th>Complementary skills</th>\n                <td>{job.complementarySkills}</td>\n              </tr>\n              <tr>\n                <th>Date Added</th>\n                <td>{job.dateAdded}</td>\n              </tr>\n            </table>\n          </li>\n        ))}\n      </ul>\n      <div className=\"page-buttons\">\n        {(pageNumber > 1) && <button onClick={() => setPageNumber(pageNumber - 1)}>{pageNumber - 1}</button>}\n        <button className=\"current-page\" >{pageNumber}</button>\n        {(pageNumber < totalPages) && <button onClick={() => setPageNumber(pageNumber + 1)}>{pageNumber + 1}</button>}\n      </div>\n    </div>\n  </>\n)};\n\n\nexport default JobSearchList;\n"]},"metadata":{},"sourceType":"module"}