{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({\n    jobTitle: '',\n    companyName: '',\n    email: '',\n    jobType: 'Permanent',\n    minimumSalary: '',\n    maximumSalary: '',\n    location: '',\n    description: '',\n    education: 'None',\n    workExperience: 'None',\n    skills: '',\n    complementarySkills: ''\n  });\n  const [navigate, setNavigate] = useState(false);\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n\n  const typeFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      if (seeker.jobType === 'Both') {\n        return true;\n      } else {\n        return seeker.jobType === vacancy.jobType;\n      }\n    });\n    return result;\n  };\n\n  const salaryFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return seeker.salary <= vacancy.maximumSalary;\n    });\n    return result;\n  };\n\n  const educationQuality = education => {\n    if (education === 'None') {\n      return 0;\n    } else if (education === 'High School Diploma') {\n      return 1;\n    } else if (education === \"Bachelor's Degree\") {\n      return 2;\n    } else if (education === \"Master's Degree\") {\n      return 3;\n    } else if (education === 'Doctoral Degree') {\n      return 4;\n    } else {\n      return 0;\n    }\n  };\n\n  const educationFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return educationQuality(seeker.education) >= educationQuality(vacancy.education);\n    });\n    return result;\n  };\n\n  const experience = time => {\n    if (time === 'None') {\n      return 0;\n    } else if (time === 'Less than 1 year') {\n      return 1;\n    } else if (time === '1 to 2 years') {\n      return 2;\n    } else if (time === '2 to 3 years') {\n      return 3;\n    } else if (time === '3 to 4 years') {\n      return 4;\n    } else if (time === '4 to 5 years') {\n      return 5;\n    } else if (time === 'Over 5 years') {\n      return 6;\n    } else {\n      return 0;\n    }\n  };\n\n  const workExperienceFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      return experience(seekers.workExperience) >= experience(vacancy.workExperience);\n    });\n    return result;\n  };\n\n  const stringCompare = (string1, string2) => {\n    let matches = 0;\n\n    for (let i = 0; i < string1.length; i++) {\n      for (let j = 0; j < string2.length; j++) {\n        if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n          matches++;\n        }\n      }\n    }\n\n    if (string1.length > 0) {\n      return matches / string1.length;\n    } else {\n      return 1;\n    }\n  };\n\n  const checkMatching = (seeker, attribute) => {\n    const required = vacancy[attribute].split(' ');\n\n    if (attribute === 'complementarySkills') {\n      attribute = 'skills';\n    }\n\n    const candidate = seeker[attribute].split(' ');\n    return stringCompare(required, candidate);\n  };\n\n  const skillsFilter = seekers => {\n    const result = seekers.filter(seeker => {\n      let matching = 0;\n      matching += checkMatching(seeker, 'skills') * 3;\n      matching += checkMatching(seeker, 'complementarySkills');\n      return matching > 1;\n    });\n    return result;\n  };\n\n  const addVacancy = async () => {\n    let body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n    const value = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (value.status === 200) {\n      const result = await fetch('/api/seekers/get-all-searching', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let seekers = await result.json();\n      console.log(seekers);\n      seekers = typeFilter(seekers);\n      seekers = salaryFilter(seekers);\n      seekers = educationFilter(seekers);\n      seekers = workExperienceFilter(seekers);\n      seekers = skillsFilter(seekers);\n\n      if (seekers.length) {\n        const search = await fetch('/api/vacancies/search', {\n          method: 'post',\n          body: JSON.stringify({\n            jobTitle: vacancy.jobTitle,\n            seekers: seekers\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    }\n\n    setNavigate(true);\n  };\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Permanent') {\n      setSalaryDescription('£ per year');\n    } else if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    }\n  }, [vacancy.jobType]);\n\n  const handleChange = event => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  };\n\n  if (navigate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Add new Vacancy\"), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Job Title:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"jobTitle\",\n    value: vacancy.jobTitle,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Company Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"companyName\",\n    value: vacancy.companyName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Email:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: vacancy.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Employment Type:\", React.createElement(\"select\", {\n    name: \"jobType\",\n    value: vacancy.jobType,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Permanent\"), React.createElement(\"option\", {\n    value: \"Contract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Contract\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Minimum Salary (\", salaryDesciption, \"):\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"minimumSalary\",\n    value: vacancy.minimumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Maximum Salary (\", salaryDesciption, \"):\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"maximumSalary\",\n    value: vacancy.maximumSalary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Location:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: vacancy.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Description:\", React.createElement(\"textarea\", {\n    rows: \"6\",\n    cols: \"50\",\n    name: \"description\",\n    value: vacancy.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Education Required:\", React.createElement(\"select\", {\n    name: \"education\",\n    value: vacancy.education,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"High School Diploma\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"High School Diploma\"), React.createElement(\"option\", {\n    value: \"Bachelor's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Bachelor's Degree\"), React.createElement(\"option\", {\n    value: \"Master's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Master's Degree\"), React.createElement(\"option\", {\n    value: \"Doctoral Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Doctoral Degree\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Work Experience Required:\", React.createElement(\"select\", {\n    name: \"workExperience\",\n    value: vacancy.workExperience,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"Less than 1 year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Less than 1 year\"), React.createElement(\"option\", {\n    value: \"1 to 2 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"1 to 2 years\"), React.createElement(\"option\", {\n    value: \"2 to 3 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"2 to 3 years\"), React.createElement(\"option\", {\n    value: \"3 to 4 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"3 to 4 years\"), React.createElement(\"option\", {\n    value: \"4 to 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"4 to 5 years\"), React.createElement(\"option\", {\n    value: \"Over 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Over 5 years\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Skills Required:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"skills\",\n    value: vacancy.skills,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Complementary Skills:\", React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"complementarySkills\",\n    value: vacancy.complementarySkills,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    onClick: () => addVacancy(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Add new vacancy\"));\n};\n\nexport default NewVacancyPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/NewVacancyPage.js"],"names":["React","useState","useEffect","Redirect","NewVacancyPage","vacancy","setVacancy","jobTitle","companyName","email","jobType","minimumSalary","maximumSalary","location","description","education","workExperience","skills","complementarySkills","navigate","setNavigate","salaryDesciption","setSalaryDescription","typeFilter","seekers","result","filter","seeker","salaryFilter","salary","educationQuality","educationFilter","experience","time","workExperienceFilter","stringCompare","string1","string2","matches","i","length","j","replace","toLowerCase","checkMatching","attribute","required","split","candidate","skillsFilter","matching","addVacancy","body","dateAdded","Date","toLocaleString","value","fetch","method","JSON","stringify","headers","status","json","console","log","search","handleChange","event","vacancyCopy","parse","target","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewVacancyPage = () => {\n  const [vacancy, setVacancy] = useState({ jobTitle: '', companyName: '', email: '', jobType: 'Permanent', minimumSalary: '',\n  maximumSalary: '', location: '', description: '', education: 'None', workExperience: 'None', skills: '', complementarySkills: '' });\n  const [navigate, setNavigate] = useState(false);\n  const [salaryDesciption, setSalaryDescription] = useState('£ per year');\n\n\n    const typeFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        if (seeker.jobType === 'Both') {\n          return true;\n        } else {\n          return (seeker.jobType === vacancy.jobType);\n        }\n      });\n      return result;\n    }\n\n    const salaryFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (seeker.salary <= vacancy.maximumSalary);\n      });\n      return result;\n    }\n\n    const educationQuality = (education) => {\n      if (education === 'None') {\n        return 0;\n      } else if (education === 'High School Diploma') {\n        return 1;\n      } else if (education === \"Bachelor's Degree\") {\n        return 2;\n      } else if (education === \"Master's Degree\") {\n        return 3;\n      } else if (education === 'Doctoral Degree') {\n        return 4;\n      } else {\n        return 0;\n      }\n    }\n\n    const educationFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (educationQuality(seeker.education) >= educationQuality(vacancy.education));\n      });\n      return result;\n    }\n\n    const experience = (time) => {\n      if (time === 'None') {\n        return 0;\n      } else if (time === 'Less than 1 year') {\n        return 1;\n      } else if (time === '1 to 2 years') {\n        return 2;\n      } else if (time === '2 to 3 years') {\n        return 3;\n      } else if (time === '3 to 4 years') {\n        return 4;\n      } else if (time === '4 to 5 years') {\n        return 5;\n      } else if (time === 'Over 5 years') {\n        return 6;\n      } else {\n        return 0;\n      }\n    }\n\n    const workExperienceFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        return (experience(seekers.workExperience) >= experience(vacancy.workExperience));\n      })\n      return result;\n    }\n\n    const stringCompare = (string1, string2) => {\n      let matches = 0;\n      for (let i = 0; i < string1.length; i++) {\n        for (let j = 0; j < string2.length; j++) {\n          if (string1[i].replace(',', '').replace('.', '').toLowerCase() === string2[j].replace(',', '').replace('.', '').toLowerCase()) {\n            matches++;\n          }\n        }\n      }\n      if (string1.length > 0) {\n        return matches/string1.length;\n      } else {\n        return 1;\n      }\n    }\n\n    const checkMatching = (seeker, attribute) => {\n      const required = vacancy[attribute].split(' ');\n      if (attribute === 'complementarySkills') {\n        attribute = 'skills';\n      }\n      const candidate = seeker[attribute].split(' ');\n      return (stringCompare(required, candidate));\n    }\n\n    const skillsFilter = (seekers) => {\n      const result = seekers.filter((seeker) => {\n        let matching = 0;\n        matching += checkMatching(seeker, 'skills') * 3;\n        matching += checkMatching(seeker, 'complementarySkills');\n        return matching > 1;\n      });\n      return result;\n    }\n\n\n\n  const addVacancy = async () => {\n    let body = vacancy;\n    const dateAdded = new Date().toLocaleString();\n    body.dateAdded = dateAdded;\n\n    const value = await fetch('/api/vacancies/add-new', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n\n    if (value.status === 200) {\n\n      const result = await fetch('/api/seekers/get-all-searching', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      let seekers = await result.json();\n      console.log(seekers);\n      seekers = typeFilter(seekers);\n      seekers = salaryFilter(seekers);\n      seekers = educationFilter(seekers);\n      seekers = workExperienceFilter(seekers);\n      seekers = skillsFilter(seekers);\n\n      if (seekers.length) {\n        const search = await fetch('/api/vacancies/search',\n        {\n          method: 'post',\n          body: JSON.stringify({ jobTitle: vacancy.jobTitle, seekers: seekers }),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n      }\n    }\n\n    setNavigate(true);\n  }\n\n  useEffect(() => {\n    if (vacancy.jobType === 'Permanent') {\n      setSalaryDescription('£ per year');\n    } else if (vacancy.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    }\n  }, [vacancy.jobType]);\n\n\n  const handleChange = (event) => {\n    const vacancyCopy = JSON.parse(JSON.stringify(vacancy));\n    vacancyCopy[event.target.name] = event.target.value;\n    setVacancy(vacancyCopy);\n  }\n\n  if (navigate) {\n    return <Redirect to=\"/\" />;\n  }\n\n\n\n  return (\n    <>\n      <h1>Add new Vacancy</h1>\n      <div className=\"form\">\n        <div>\n          <label>\n            Job Title:\n            <input type=\"text\" name=\"jobTitle\" value={vacancy.jobTitle} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Company Name:\n            <input type=\"text\" name=\"companyName\" value={vacancy.companyName} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Email:\n            <input type=\"text\" name=\"email\" value={vacancy.email} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Employment Type:\n            <select name=\"jobType\" value={vacancy.jobType} onChange={handleChange}>\n              <option value=\"Permanent\">Permanent</option>\n              <option value=\"Contract\">Contract</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Minimum Salary ({salaryDesciption}):\n            <input type=\"number\" name=\"minimumSalary\" value={vacancy.minimumSalary} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Maximum Salary ({salaryDesciption}):\n            <input type=\"number\" name=\"maximumSalary\" value={vacancy.maximumSalary} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Location:\n            <input type=\"text\" name=\"location\" value={vacancy.location} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Description:\n            <textarea rows=\"6\" cols=\"50\" name=\"description\" value={vacancy.description} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Education Required:\n            <select name=\"education\" value={vacancy.education} onChange={handleChange}>\n              <option value=\"None\">None</option>\n              <option value=\"High School Diploma\">High School Diploma</option>\n              <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\n              <option value=\"Master's Degree\">Master's Degree</option>\n              <option value=\"Doctoral Degree\">Doctoral Degree</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Work Experience Required:\n            <select name=\"workExperience\" value={vacancy.workExperience} onChange={handleChange}>\n              <option value=\"None\">None</option>\n              <option value=\"Less than 1 year\">Less than 1 year</option>\n              <option value=\"1 to 2 years\">1 to 2 years</option>\n              <option value=\"2 to 3 years\">2 to 3 years</option>\n              <option value=\"3 to 4 years\">3 to 4 years</option>\n              <option value=\"4 to 5 years\">4 to 5 years</option>\n              <option value=\"Over 5 years\">Over 5 years</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Skills Required:\n            <textarea rows=\"4\" cols=\"50\" name=\"skills\" value={vacancy.skills} onChange={handleChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Complementary Skills:\n            <textarea rows=\"4\" cols=\"50\" name=\"complementarySkills\" value={vacancy.complementarySkills} onChange={handleChange} />\n          </label>\n        </div>\n      </div>\n      <button onClick={() => addVacancy()}>Add new vacancy</button>\n    </>\n  );\n}\n\nexport default NewVacancyPage;\n"]},"metadata":{},"sourceType":"module"}