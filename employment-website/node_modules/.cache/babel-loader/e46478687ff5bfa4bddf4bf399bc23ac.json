{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from './salary-filter';\n\nconst JobSearchList = () => {\n  const _useState = useState({\n    jobs: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobs = _useState2[0],\n        setJobs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        typeFilter = _useState4[0],\n        setTypeFilter = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        salaryFilter = _useState6[0],\n        setSalaryFilter = _useState6[1];\n\n  const typeFilterize = unfilteredJobs => {\n    const filteredJobs = {\n      jobs: unfilteredJobs.filter(element => {\n        if (typeFilter.length === 0) {\n          return true;\n        } else if (typeFilter.length === 2) {\n          return true;\n        } else if (typeFilter.includes(\"P\")) {\n          return element.type === 'Permanent';\n        } else if (typeFilter.includes(\"C\")) {\n          return element.type === 'Contract';\n        }\n      })\n    };\n    return filteredJobs;\n  };\n\n  const checkSalaryFilter = job => {\n    var result = false;\n    salaries.forEach(filter => {\n      if (salaryFilter.includes(filter.index)) {\n        if (filter.type === job.type) {\n          if (!(job.maximumSalary < filter.lowerLimit || job.minimumSalary > filter.upperLimit)) {\n            result = true;\n          }\n        }\n      }\n    });\n    return result;\n  };\n\n  const salaryFilterize = unfilteredJobs => {\n    const filteredJobs = {\n      jobs: unfilteredJobs.filter(element => {\n        if (salaryFilter.length === 0) {\n          return true;\n        } else if (salaryFilter.length === salaries.length) {\n          return true;\n        } else {\n          return checkSalaryFilter(element);\n        }\n      })\n    };\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles', {\n        method: 'post'\n      });\n      const body = await result.json();\n      const typeFiltered = typeFilterize(body.jobs);\n      const salaryFiltered = salaryFilterize(typeFiltered.jobs);\n      setJobs(salaryFiltered);\n    };\n\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, box => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, box => {\n      array.push(box.value);\n    });\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" Various IT jobs \"), React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Job Types: \"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"P\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \"Permanent \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"C\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \"Contract \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" Salary: \"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, salaries.map((salary, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    value: salary.index,\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), salary.message, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, jobsArray.map((job, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/vacancies/\".concat(job.jobTitle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \" \", job.jobTitle, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, job.companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, job.type), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, job.minimumSalary, \"\\xA3 - \", job.maximumSalary, \"\\xA3\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, job.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, job.essentialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, job.beneficialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, job.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, job.dateAdded), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))))));\n};\n\nexport default JobSearchList;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js"],"names":["React","useState","useEffect","Link","salaries","JobSearchList","jobs","setJobs","typeFilter","setTypeFilter","salaryFilter","setSalaryFilter","typeFilterize","unfilteredJobs","filteredJobs","filter","element","length","includes","type","checkSalaryFilter","job","result","forEach","index","maximumSalary","lowerLimit","minimumSalary","upperLimit","salaryFilterize","fetchData","fetch","method","body","json","typeFiltered","salaryFiltered","updateTypeFilter","array","typeBoxes","document","querySelectorAll","Array","prototype","call","box","push","value","updateSalaryFilter","salaryBoxes","jobsArray","map","salary","key","message","jobTitle","companyName","location","essentialRequirements","beneficialRequirements","description","dateAdded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from './salary-filter';\n\nconst JobSearchList = () => {\n  const [jobs, setJobs] = useState({jobs: []});\n  const [typeFilter, setTypeFilter] = useState([]);\n  const [salaryFilter, setSalaryFilter] = useState([]);\n\n  const typeFilterize = (unfilteredJobs) => {\n    const filteredJobs = { jobs: unfilteredJobs.filter((element) => {\n      if (typeFilter.length === 0) {\n        return true;\n      } else if (typeFilter.length === 2) {\n        return true;\n      } else if (typeFilter.includes(\"P\")) {\n        return (element.type === 'Permanent');\n      } else if (typeFilter.includes(\"C\")) {\n        return (element.type === 'Contract');\n      }\n    })};\n    return filteredJobs;\n  };\n\n  const checkSalaryFilter = (job) => {\n    var result = false;\n    salaries.forEach((filter) => {\n      if (salaryFilter.includes(filter.index)) {\n        if (filter.type === job.type) {\n          if (!(job.maximumSalary < filter.lowerLimit || job.minimumSalary > filter.upperLimit)) {\n            result = true;\n          }\n        }\n      }\n    });\n    return result;\n  };\n\n  const salaryFilterize = (unfilteredJobs) => {\n    const filteredJobs = { jobs: unfilteredJobs.filter((element) => {\n      if (salaryFilter.length === 0) {\n        return true;\n      } else if (salaryFilter.length === salaries.length) {\n        return true;\n      } else {\n        return checkSalaryFilter(element);\n      }\n    })};\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles',\n      {\n        method: 'post'\n      });\n      const body = await result.json();\n      const typeFiltered = typeFilterize(body.jobs);\n      const salaryFiltered = salaryFilterize(typeFiltered.jobs);\n\n      setJobs(salaryFiltered);\n    }\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, (box) => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, (box) => {\n      array.push(box.value);\n    })\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n\n\n\n  return(\n  <>\n    <h1> Various IT jobs </h1>\n\n    <div className=\"filter\">\n      <p> Job Types: </p>\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"P\" onClick={() => updateTypeFilter()} />Permanent <br />\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"C\" onClick={() => updateTypeFilter()} />Contract <br />\n\n\n      <p> Salary: </p>\n      <ul>\n        {\n          salaries.map((salary, key) => (\n            <li key={key}>\n              <input type=\"checkbox\" name=\"salaryFilter\" value={salary.index} onClick={() => updateSalaryFilter()} />{salary.message}<br />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n\n    <div>\n      <ul>\n        {jobsArray.map((job, key) => (\n          <li key={key}>\n            <Link to={`/vacancies/${job.jobTitle}`}> {job.jobTitle} </Link>\n            <p>{job.companyName}</p>\n            <p>{job.type}</p>\n            <p>{job.minimumSalary}£ - {job.maximumSalary}£</p>\n            <p>{job.location}</p>\n            <p>{job.essentialRequirements}</p>\n            <p>{job.beneficialRequirements}</p>\n            <p>{job.description}</p>\n            <p>{job.dateAdded}</p>\n            <br></br>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </>\n)};\n\n\nexport default JobSearchList;\n"]},"metadata":{},"sourceType":"module"}