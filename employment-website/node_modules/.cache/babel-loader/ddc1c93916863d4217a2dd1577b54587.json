{"ast":null,"code":"var _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n  const [account, setAccount] = useState({\n    firstName: '',\n    surname: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    search: '0',\n    location: '',\n    education: 'None',\n    workExperience: 'None',\n    skills: '',\n    salary: '',\n    jobType: 'Permanent'\n  });\n  const [salaryDesciption, setSalaryDescription] = useState('£/year');\n  const [error, setError] = useState('');\n  const [navigate, setNavigate] = useState(false);\n\n  const register = async () => {\n    if (account.email.includes('@', 1) && account.email.includes('.', 3)) {\n      if (account.password && account.password.length >= 8 && account.password === account.confirmPassword) {\n        let body = account;\n        const dateAdded = new Date().toLocaleString();\n        body.dateAdded = dateAdded;\n        body.hashPassword = generate(account.password);\n        delete body.password;\n        delete body.confirmPassword;\n        const result = await fetch('/api/seekers/add-new', {\n          method: 'post',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const response = await result.json();\n\n        if (response.message === 'This email is already taken') {\n          setError('emailTaken');\n        } else {\n          setNavigate(true);\n        }\n      } else {\n        setError('invalidPassword');\n      }\n    } else {\n      setError('invalidEmail');\n    }\n  };\n\n  useEffect(() => {\n    if (account.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    } else {\n      setSalaryDescription('£ per year');\n    }\n  }, [account.jobType]);\n\n  if (navigate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  const handleChange = event => {\n    const accountCopy = JSON.parse(JSON.stringify(account));\n    accountCopy[event.target.name] = event.target.value;\n    setAccount(accountCopy);\n    /*\n    if (event.target.name === 'jobType') {\n      if (event.target.value === 'Contract') {\n        setSalaryDescription('£/day');\n      } else {\n        setSalaryDescription('£/year');\n      }\n    } */\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"loginbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"First Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    value: account.firstName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Surname:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"surname\",\n    value: account.surname,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"E-mail:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: account.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), error === 'emailTaken' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"This e-mail is already taken\"), error === 'invalidEmail' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Please enter a valid e-mail\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: account.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), error === 'invalidPassword' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Make sure your password matches and is at least 8 characters long\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Confirm Password:\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: account.confirmPassword,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Location:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"location\",\n    value: account.location,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Highest level of education:\"), React.createElement(\"select\", {\n    name: \"education\",\n    value: account.education,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"High School Diploma\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"High School Diploma\"), React.createElement(\"option\", {\n    value: \"Bachelor's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Bachelor's Degree\"), React.createElement(\"option\", {\n    value: \"Master's Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Master's Degree\"), React.createElement(\"option\", {\n    value: \"Doctoral Degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Doctoral Degree\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Work Experience:\"), React.createElement(\"select\", {\n    name: \"workExperience\",\n    value: account.workExperience,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: \"Less than 1 year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Less than 1 year\"), React.createElement(\"option\", {\n    value: \"1 to 2 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"1 to 2 years\"), React.createElement(\"option\", {\n    value: \"2 to 3 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"2 to 3 years\"), React.createElement(\"option\", {\n    value: \"3 to 4 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"3 to 4 years\"), React.createElement(\"option\", {\n    value: \"4 to 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"4 to 5 years\"), React.createElement(\"option\", {\n    value: \"Over 5 years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Over 5 years\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Skills:\"), React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    name: \"skills\",\n    value: account.skills,\n    placeholder: \"Write keywords separated by commas\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Employment Type:\"), React.createElement(\"select\", {\n    name: \"jobType\",\n    value: account.jobType,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Permanent\"), React.createElement(\"option\", {\n    value: \"Contract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Contract\"), React.createElement(\"option\", {\n    value: \"Any\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Any\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Minimum Expected Salary (\", salaryDesciption, \"):\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"salary\",\n    value: account.salary,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/RegisterPage.js"],"names":["React","useState","useEffect","Redirect","generate","RegisterPage","account","setAccount","firstName","surname","email","password","confirmPassword","search","location","education","workExperience","skills","salary","jobType","salaryDesciption","setSalaryDescription","error","setError","navigate","setNavigate","register","includes","length","body","dateAdded","Date","toLocaleString","hashPassword","result","fetch","method","JSON","stringify","headers","response","json","message","handleChange","event","accountCopy","parse","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { generate } from 'password-hash';\n\nconst RegisterPage = () => {\n  const [account, setAccount] = useState({ firstName: '', surname: '', email: '', password: '', confirmPassword: '', search: '0',\n                                         location: '', education: 'None', workExperience: 'None', skills: '', salary: '', jobType: 'Permanent' });\n  const [salaryDesciption, setSalaryDescription] = useState('£/year');\n  const [error, setError] = useState('');\n  const [navigate, setNavigate] = useState(false);\n\n\n  const register = async () => {\n    if (account.email.includes('@', 1) && account.email.includes('.', 3)) {\n      if (account.password && account.password.length >= 8 && account.password === account.confirmPassword)\n      {\n        let body = account;\n\n        const dateAdded = new Date().toLocaleString();\n        body.dateAdded = dateAdded;\n\n        body.hashPassword = generate(account.password);\n        delete body.password;\n        delete body.confirmPassword;\n\n        const result = await fetch('/api/seekers/add-new', {\n          method: 'post',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n        const response = await result.json();\n        if (response.message === 'This email is already taken') {\n          setError('emailTaken');\n        } else {\n          setNavigate(true);\n        }\n      } else {\n        setError('invalidPassword');\n      }\n    } else {\n      setError('invalidEmail');\n    }\n  };\n\n  useEffect(() => {\n    if (account.jobType === 'Contract') {\n      setSalaryDescription('£ per day');\n    } else {\n      setSalaryDescription('£ per year');\n    }\n  }, [account.jobType]);\n\n  if (navigate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleChange = (event) => {\n    const accountCopy = JSON.parse(JSON.stringify(account));\n    accountCopy[event.target.name] = event.target.value;\n    setAccount(accountCopy);\n    /*\n    if (event.target.name === 'jobType') {\n      if (event.target.value === 'Contract') {\n        setSalaryDescription('£/day');\n      } else {\n        setSalaryDescription('£/year');\n      }\n    } */\n  }\n\n\n\n\n    return (\n      <>\n          <div className = \"loginbox\">\n          <h1>Register</h1>\n          <div>\n            <div>\n              <label>First Name:</label>\n              <input type=\"text\" name=\"firstName\" value={account.firstName} onChange={handleChange} />\n            </div>\n            <div>\n              <label>Surname:</label>\n              <input type=\"text\" name=\"surname\" value={account.surname} onChange={handleChange} />\n            </div>\n            <div>\n              <label>E-mail:</label>\n              <input type=\"text\" name=\"email\" value={account.email} onChange={handleChange} />\n              {(error === 'emailTaken') && <p>This e-mail is already taken</p>}\n              {(error === 'invalidEmail') && <p>Please enter a valid e-mail</p>}\n            </div>\n            <div>\n              <label>Password:</label>\n              <input type=\"password\" name=\"password\" value={account.password} onChange={handleChange} />\n              {(error === 'invalidPassword') && <p>Make sure your password matches and is at least 8 characters long</p>}\n            </div>\n            <div>\n              <label>Confirm Password:</label>\n              <input type=\"password\" name=\"confirmPassword\" value={account.confirmPassword} onChange={handleChange} />\n            </div>\n            <div>\n              <label>Location:</label>\n              <input type=\"text\" name=\"location\" value={account.location} onChange={handleChange} />\n            </div>\n            <div>\n              <label>Highest level of education:</label>\n              <select name=\"education\" value={account.education} onChange={handleChange}>\n                <option value=\"None\">None</option>\n                <option value=\"High School Diploma\">High School Diploma</option>\n                <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\n                <option value=\"Master's Degree\">Master's Degree</option>\n                <option value=\"Doctoral Degree\">Doctoral Degree</option>\n              </select>\n            </div>\n            <div>\n              <label>Work Experience:</label>\n              <select name=\"workExperience\" value={account.workExperience} onChange={handleChange}>\n                <option value=\"None\">None</option>\n                <option value=\"Less than 1 year\">Less than 1 year</option>\n                <option value=\"1 to 2 years\">1 to 2 years</option>\n                <option value=\"2 to 3 years\">2 to 3 years</option>\n                <option value=\"3 to 4 years\">3 to 4 years</option>\n                <option value=\"4 to 5 years\">4 to 5 years</option>\n                <option value=\"Over 5 years\">Over 5 years</option>\n              </select>\n            </div>\n            <div>\n              <label>Skills:</label>\n              <textarea rows=\"4\" cols=\"50\" name=\"skills\" value={account.skills} placeholder=\"Write keywords separated by commas\" onChange={handleChange}/>\n            </div>\n            <div>\n              <label>Employment Type:</label>\n              <select name=\"jobType\" value={account.jobType} onChange={handleChange}>\n                <option value=\"Permanent\">Permanent</option>\n                <option value=\"Contract\">Contract</option>\n                <option value=\"Any\">Any</option>\n              </select>\n            </div>\n            <div>\n              <label>Minimum Expected Salary ({salaryDesciption}):</label>\n              <input type=\"number\" name=\"salary\" value={account.salary} onChange={handleChange} />\n            </div>\n          </div>\n          <button onClick={register}>Register</button>\n        </div>\n      </>\n    );\n\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}