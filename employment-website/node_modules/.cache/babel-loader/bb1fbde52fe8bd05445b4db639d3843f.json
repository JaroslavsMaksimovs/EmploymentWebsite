{"ast":null,"code":"import _slicedToArray from \"/Users/Jaroslav/Desktop/COMP0029/employment-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from './salary-filter';\n\nconst JobSearchList = () => {\n  const _useState = useState({\n    jobs: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobs = _useState2[0],\n        setJobs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        typeFilter = _useState4[0],\n        setTypeFilter = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        salaryFilter = _useState6[0],\n        setSalaryFilter = _useState6[1];\n\n  const typeFilterize = unfilteredJobs => {\n    const filteredJobs = {\n      jobs: unfilteredJobs.filter(element => {\n        if (typeFilter.length === 0) {\n          return true;\n        } else if (typeFilter.length === 2) {\n          return true;\n        } else if (typeFilter.includes(\"P\")) {\n          return element.type === 'Permanent';\n        } else if (typeFilter.includes(\"C\")) {\n          return element.type === 'Contract';\n        }\n      })\n    };\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles', {\n        method: 'post'\n      });\n      const body = await result.json();\n      const typeFiltered = typeFilterize(body.jobs);\n      setJobs(typeFiltered);\n    };\n\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, box => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, box => {\n      array.push(box.value);\n    });\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Various IT jobs \"), React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \" Job Types: \"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"P\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \"Permanent \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"typeFilter\",\n    value: \"C\",\n    onClick: () => updateTypeFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Contract \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" Salary: \"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, salaries.map((salary, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"salaryFilter\",\n    onClick: () => updateSalaryFilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), salary.message, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, jobsArray.map((job, key) => React.createElement(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/vacancies/\".concat(job.jobTitle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" \", job.jobTitle, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, job.companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, job.type), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, job.minimumSalary, \"\\xA3 - \", job.maximumSalary, \"\\xA3\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, job.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, job.essentialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, job.beneficialRequirements), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, job.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, job.dateAdded), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))))));\n};\n\nexport default JobSearchList;","map":{"version":3,"sources":["/Users/Jaroslav/Desktop/COMP0029/employment-website/src/pages/JobSearchList.js"],"names":["React","useState","useEffect","Link","salaries","JobSearchList","jobs","setJobs","typeFilter","setTypeFilter","salaryFilter","setSalaryFilter","typeFilterize","unfilteredJobs","filteredJobs","filter","element","length","includes","type","fetchData","result","fetch","method","body","json","typeFiltered","updateTypeFilter","array","typeBoxes","document","querySelectorAll","Array","prototype","forEach","call","box","push","value","updateSalaryFilter","salaryBoxes","jobsArray","map","salary","key","message","job","jobTitle","companyName","minimumSalary","maximumSalary","location","essentialRequirements","beneficialRequirements","description","dateAdded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport salaries from './salary-filter';\n\nconst JobSearchList = () => {\n  const [jobs, setJobs] = useState({jobs: []});\n  const [typeFilter, setTypeFilter] = useState([]);\n  const [salaryFilter, setSalaryFilter] = useState([]);\n\n  const typeFilterize = (unfilteredJobs) => {\n    const filteredJobs = { jobs: unfilteredJobs.filter((element) => {\n      if (typeFilter.length === 0) {\n        return true;\n      } else if (typeFilter.length === 2) {\n        return true;\n      } else if (typeFilter.includes(\"P\")) {\n        return (element.type === 'Permanent');\n      } else if (typeFilter.includes(\"C\")) {\n        return (element.type === 'Contract');\n      }\n    })};\n    return filteredJobs;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/vacancies/getAllTitles',\n      {\n        method: 'post'\n      });\n      const body = await result.json();\n      const typeFiltered = typeFilterize(body.jobs);\n\n\n\n\n      setJobs(typeFiltered);\n    }\n    fetchData();\n  }, [typeFilter, salaryFilter]);\n\n  const updateTypeFilter = () => {\n    var array = [];\n    const typeBoxes = document.querySelectorAll('[name=\"typeFilter\"]:checked');\n    Array.prototype.forEach.call(typeBoxes, (box) => {\n      array.push(box.value);\n    });\n    setTypeFilter(array);\n  };\n\n  const updateSalaryFilter = () => {\n    var array = [];\n    const salaryBoxes = document.querySelectorAll('[name=\"salaryFilter\"]:checked');\n    Array.prototype.forEach.call(salaryBoxes, (box) => {\n      array.push(box.value);\n    })\n    setSalaryFilter(array);\n  };\n\n  const jobsArray = jobs.jobs;\n\n\n\n  return(\n  <>\n    <h1> Various IT jobs </h1>\n\n    <div className=\"filter\">\n      <p> Job Types: </p>\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"P\" onClick={() => updateTypeFilter()} />Permanent <br />\n      <input type=\"checkbox\" name=\"typeFilter\" value=\"C\" onClick={() => updateTypeFilter()} />Contract <br />\n\n\n      <p> Salary: </p>\n      <ul>\n        {\n          salaries.map((salary, key) => (\n            <li key={key}>\n              <input type=\"checkbox\" name=\"salaryFilter\" onClick={() => updateSalaryFilter()} />{salary.message}<br />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n\n\n\n\n    <div>\n      <ul>\n        {jobsArray.map((job, key) => (\n          <li key={key}>\n            <Link to={`/vacancies/${job.jobTitle}`}> {job.jobTitle} </Link>\n            <p>{job.companyName}</p>\n            <p>{job.type}</p>\n            <p>{job.minimumSalary}£ - {job.maximumSalary}£</p>\n            <p>{job.location}</p>\n            <p>{job.essentialRequirements}</p>\n            <p>{job.beneficialRequirements}</p>\n            <p>{job.description}</p>\n            <p>{job.dateAdded}</p>\n            <br></br>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </>\n)};\n\n\nexport default JobSearchList;\n"]},"metadata":{},"sourceType":"module"}